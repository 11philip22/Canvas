#! /usr/bin/env python

# traceroutes out to an external address
# to determine your physical location

import socket
import sys
if '.' not in sys.path:
    sys.path.append('.')

from exploitutils import *
from ExploitTypes.localcommand import LocalCommand

NAME = "CANVAS Where Am I"
DESCRIPTION = "Gets the first external IP off of a traceroute"
DOCUMENTATION = {}
VERSION = "1.0"
PROPERTY = {}
PROPERTY['TYPE'] = "Recon"
PROPERTY['SITE'] = "Remote"

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.mode = 'TCP'
        self.host = 'www.immunityinc.com'

    def getArgs(self):
        self.node = self.argsDict['passednodes'][0]
        self.host = self.argsDict.get('external', self.host)
        
        try:
            self.host = socket.gethostbyname(self.host)
        except socket.error:
            #weird error "gaierror: (-5, "no address associated with hostname")
            pass

    def usage(self):
        print "Usage: whereami [ -O external:hostname ]"
        return
    

    def run(self):
        """ get first external ip address for a local network """
        rv = False
        
        self.getArgs()
        app = self.engine.getModuleExploit('traceroute')
        app.link(self)
        
        self.setInfo("%s (in progress)"%(NAME))
        
        for node in self.argsDict["passednodes"]:
            self.log("Tracerouting from node %s"% node.getname())
                      
            app.argsDict["mode"] = "TCP"
            app.argsDict["host"] = self.host
            x =  app.run()
            if x == 1:
                hops = app.result
                for hop in hops:
                    print "hop: %s" % hop
                    # from exploit utils
                    if check_reserved(hop) == True:
                        continue
                    else:
                        self.log("[!] first external hop: %s (placed on map if GeoIP is available)"% hop)
                        self.node.add_host(hop)
                        rv = True
                        break
                    
            else:
                rv = False

        if rv:
            self.node.hostsknowledge.get_localhost().add_knowledge("Whereami", hop, 100)            
            self.setInfo("%s - done (success)"%(NAME))
            return 1
        else:
            self.setInfo("%s - done (failed)"%(NAME))
            return 0

if __name__ == '__main__':
    app = theexploit()
    ret = standard_callback_commandline(app)

