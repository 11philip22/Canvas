 try {
        $Computer = [ADSI]"WinNT://HELLOCOMPUTER"
        $Groups = $Computer.psbase.Children | Where {$_.psbase.schemaClassName -eq "group"}
        $ab = @()
        ForEach ($Group In $Groups)
        {
            $C = $Group.Name
            $Members = @($Group.psbase.Invoke("Members"))
            ForEach ($Member In $Members)
            {
                $Class = $Member.GetType().InvokeMember("Class", 'GetProperty', $Null, $Member, $Null)
                $Name = $Member.GetType().InvokeMember("Name", 'GetProperty', $Null, $Member, $Null)
                try{
                    $A = $Member.GetType().InvokeMember("LastLogin", 'GetProperty', $Null, $Member, $Null)
                    }
                catch{}
                try{
                    $B = $Member.GetType().InvokeMember("HomeDirectory", 'GetProperty', $Null, $Member, $Null)
                    }
                catch{}
                #$A = $Member.GetType().InvokeMember("ObjectSID", 'GetProperty', $Null, $Member, $Null)
                #$A = " 8"
                $ab += "$Name@##@$Class@##@$A@##@$C@##@$B***"
            }
        }
        $ab
        }
        catch {
           "***" | Out-String
        }