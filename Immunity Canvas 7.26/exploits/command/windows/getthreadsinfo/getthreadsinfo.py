#! /usr/bin/env python
#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *

import addencoder
import win32shell

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

import canvasengine
from canvasengine import socket_save_list

import time
import shellcodeGenerator


NAME             = "getthreadsinfo"
DESCRIPTION      = "Gets information on each thread in the process for all nodes"
DOCUMENTATION    = {}
VERSION          = "1.0"

PROPERTY         = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        for node in self.argsDict["passednodes"]:
            type=node.nodetype
            if "win32api" in node.capabilities:
                self.result=node.shell.getthreadsinfo()
                if self.result==[]:
                    self.log("No tokens in the process...")
                else:
                    self.log("Result: %s"%self.result)
            else:
                self.log("Node of type %s not supported yet."%type)
                pass

        self.setInfo("%s - done (success)"%(NAME))
        return 1



