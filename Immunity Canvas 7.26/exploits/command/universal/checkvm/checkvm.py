#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

import os,getopt
import socket
from exploitutils import *

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand
import canvasengine
import time

NAME                = "checkvm"
DESCRIPTION         = "Checks to see if we're inside a VM"
DOCUMENTATION       = {}
VERSION             = "1.0"
PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Unix"], ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result             = ""
        self.supportedNodeArgs  = [["win32Node", "win64Node", "bsdNode", "linuxNode"]]
        self.name               = NAME

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))

        for node in self.argsDict["passednodes"]:

            if node.nodetype not in self.supportedNodeArgs[0]:
                self.log("%s node type not supported" % node.nodetype)
                continue

            self.result = node.shell.checkvm()
            target      = node.get_known_host("127.0.0.1")

            if not self.result:
                self.setInfo("%s -> Host is not likely to be a VirtualMachine"%(NAME))
                self.log("%s -> Host is not likely to be a VirtualMachine"%(NAME))
            else:
                self.setInfo("%s -> Host is likely to be a VirtualMachine"%(NAME))
                self.log("%s -> Host is likely to be a VirtualMachine"%(NAME))

            target.add_knowledge("VirtualMachine", self.result, 100)

        self.setInfo("%s (finished)" % (NAME))
        return 1
