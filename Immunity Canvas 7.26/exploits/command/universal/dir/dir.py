#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

from exploitutils import *

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME                = "dir"
DESCRIPTION         = "Gets directory listing"
DOCUMENTATION       = {}
VERSION             = "1.0"

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Unix"], ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result             = ""
        self.supportedNodeTypes = ["LocalNode", "UnixShellNode", "win32Node", "linuxNode", "osxNode","win64Node"]
        self.name               = NAME
        self.directory          = "."

    def getargs(self):
        self.directory = self.argsDict.get("directory", self.directory)
        return

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))
        self.getargs()

        node        = self.argsDict["passednodes"][0]
        nodetype    = node.nodetype

        # shouldn't we be doing a nodetype check here ?
        self.result = node.dir(self.directory)

        if type(self.result) == type([]):
            self.result = "\n".join(self.result)

        self.dispshellcmd = "dir %s" % self.directory
        self.log("listing: %s\n%s" % (self.directory, self.result))

        self.setInfo("%s %s - (finished)" % (NAME, self.directory))
        return 1
