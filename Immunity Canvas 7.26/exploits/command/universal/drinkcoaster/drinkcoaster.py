#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if '.' not in sys.path:
    sys.path.append('.')

from exploitutils import *
from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME                    = "drinkcoaster"
DESCRIPTION             = "Provides a useful drink coaster! (drive D: is used)"
VERSION                 = "1.1"

DOCUMENTATION           = {}

PROPERTY                = {}
PROPERTY['TYPE']        = "Commands"
PROPERTY['SITE']        = "Local"
PROPERTY['ARCH']        = [ ["Unix"], ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))
        for node in self.argsDict["passednodes"]:

            if node.nodetype == "UnixShellNode":
                self.result = node.runcommand("eject /dev/cdrom")
            elif "linux" in node.capabilities:
                result = node.shell.runcommand("eject /dev/cdrom")
            elif node.nodetype in ["win32Node", "win64Node"]:
                self.result = node.shell.drinkcoaster("D:")
            else:
                self.log("Node of type %s not supported yet." % node.nodetype)
                pass

            if self.result != "":
                self.log("Result: %s" % self.result)

        self.setInfo("%s - (finished)" % (NAME))
        return 1

