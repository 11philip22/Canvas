#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

import canvasengine
from canvasengine import socket_save_list
import time

NAME="getcwd"
DESCRIPTION="Calls getcwd() or equivalent. Uses first selected node."
DOCUMENTATION={}
#QO44056 fixes this?
VERSION="1.0"

PROPERTY = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Unix"], ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result=""
        self.name=NAME

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        for node in self.argsDict["passednodes"]:
            nodetype=node.nodetype
            if nodetype=="UnixShellNode":
                self.result=node.runcommand("pwd")
            elif nodetype in ["JavaNode", "ScriptNode","win32Node","linuxNode","solarisNode","bsdNode", "osxNode","VFSNode","win64Node","PowerShellNode"]:
                self.result=node.getcwd()
            elif nodetype in ["localNode"]:
                self.result=os.getcwd()
            else:
                self.log("%s node type not supported"%nodetype)
                continue

            self.log("current directory: %s"%self.result)
        self.dispshellcmd = "pwd"
        self.setInfo("%s - done (success: %s)"%(NAME,self.result))
        return 1
