#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")

from exploitutils import *
from ExploitTypes.localcommand import LocalCommand

import logging


NAME                   = "Add Host"
DESCRIPTION            = "Adds a host to the host knowledge tree"
DOCUMENTATION          = {}
DOCUMENTATION["Notes"] = "This will do resolution of the IP address/Name as well"
VERSION                = "1.0"

PROPERTY = {}
PROPERTY['TYPE'] = "Tools"

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def addIPv6(self, ip, node):
        """ handle the adding of ipv6 addies """
        if ip in node.get_all_known_hosts():
            logging.warning("Host %s already known" % ip)
            self.setInfoDone()
            return 0

        self.result = ip

        newhost = node.new_host(ip)

        if newhost:
            logging.info("Host added: %s" % ip)
            self.setInfo("%s - done (success: %s)"%(NAME,ip.strip()))
            ret = 1
        else:
            self.setInfo("%s - done (failed: %s)"%(NAME,ip.strip()))
            ret = 0

        return ret

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        host=self.argsDict["host"]
        node=self.argsDict["passednodes"][0]

        # XXX: for IPv6 beta

        if ":" in host:
            ret = self.addIPv6(host, node)
            return ret

        # XXX: end of mod

        app=self.engine.getModuleExploit("gethostbyname")
        app.link(self)
        #print "argsDict=%s"%app.argsDict
        if not app.run(): #call gethostbyname()
            self.setInfoFailed(app.result.strip())
            return 0

        ip          = app.result
        self.result = ip

        ##Stop 0.0.0.0 being added as that's just plain stupid
        if ip == "0.0.0.0":
            ip = "127.0.0.1"

        if ip in node.get_all_known_hosts():
            logging.warning("Host %s already known" % ip)
            self.setInfoDone()
            return 0

        gi = self.getGeoIPlist()
        if gi != None:
            country = gi.country_code_by_addr(ip)
            logging.info("Country code of %s: %s" % (ip, country))
        else:
            country = None
        if self.engine and country in self.engine.country_exclude_list:
            logging.warning("Excluding country (%s) for (%s)" % (ip, country))
            self.setInfoDone()
            return 0

        newhost=node.new_host(ip,resolved_from=host)

        if newhost:
            logging.info("Host added: %s" % self.result)
            self.setInfo("%s - done (success: %s)"%(NAME,self.result.strip()))
            ret = 1
        else:
            self.setInfo("%s - done (failed: %s)"%(NAME,self.result.strip()))
            ret = 0

        return ret

