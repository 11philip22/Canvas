import os
import gtk
import steg
import base64
import tempfile

from tb_utils import *

class IncomingEmailWindow(object):
    def __init__(self, parent=None):
        self.parent = parent

        self.setup_gui()
        if not parent: return
        window = self.ui.window
        window.set_transient_for(parent.ui.window)
        window.set_destroy_with_parent(True)
        window.set_position(gtk.WIN_POS_CENTER_ON_PARENT)
        window.connect('delete-event', self.on_delete)
        
    def on_delete(self, widget, event):
        widget.hide()
        return True

    def show(self):
        if not self.ui.window.props.visible:
            self.ui.window.show_all()

    def setup_gui(self):
            #     if self.incoming_server is None:
            # self.ui.show_error("Incoming Email Server is not correctly configured",
            #                    self.ui.window)
            # return
        
        self._wt = gtk.glade.XML(INCOMING_EMAIL_GLADE_FILE)
        self.ui = UI(self._wt.get_widget)

        treeview = self.ui.treeview
        treeview.set_reorderable(True)

        self.ui.extract_button.connect("clicked", self.extract_from_email)
        self.ui.body_button.connect("clicked", self.show_body)
        self.ui.close_button.connect("clicked", lambda w: self.ui.window.hide())
        self.ui.refresh_button.connect("clicked", lambda w: self.display_new_emails())
        self.ui.window.resize(600, 400)
        
        # columns are id, msgnum, Date, From , Subject, Body, amount of attachments
        liststore = gtk.ListStore(str, int, str, str, str, str, int)
        treeview.set_model(liststore)
        col_name = gtk.TreeViewColumn("Num", gtk.CellRendererText(), text=1)
        treeview.append_column(col_name)
        col_name = gtk.TreeViewColumn("Date", gtk.CellRendererText(), text=2)
        treeview.append_column(col_name)
        col_ver = gtk.TreeViewColumn("From", gtk.CellRendererText(), text=3)
        treeview.append_column(col_ver)
        col_desc = gtk.TreeViewColumn("Subject", gtk.CellRendererText(), text=4)
        treeview.append_column(col_desc)
        col_desc = gtk.TreeViewColumn("Attachments", gtk.CellRendererText(), text=6)
        treeview.append_column(col_desc)

    def do_extract_data(self):
        data = self.parent.stegger.extract_data()
        data = data if data else "No data was found..."
        self.ui.show_textview_dialog("Steg data", data, self.ui.window)
        return None
    
    def extract_from_email(self, widget):
        selected = self.ui.get_selected_row(self.ui.treeview)
        if not selected: return

        server = self.parent.incoming_server
        
        msg = server.messages[selected[0]]
        for attach in msg.Attachments:
            fd, fpath = tempfile.mkstemp()
            f = os.fdopen(fd, "wb")
            f.write(base64.decodestring(attach))
            self.parent.stegger = steg.ImageStegger(fpath)
            f.close()
            self.do_extract_data()
            os.remove(fpath)

    def show_body(self, widget):
        selected = self.ui.get_selected_row(self.ui.treeview)
        if not selected: return
        self.ui.show_textview_dialog("Email body", selected[5], self.ui.window)
           
    def display_new_emails(self):
        server = self.parent.incoming_server
        
        if not server.connect():
            self.ui.show_error("Could not connect to mail server %s on port %s" %
                               (self.parent.email_config.incoming_server,
                               self.parent.email_config.incoming_server), self.ui.window)
            return
        
        try:
            server.get_new_msgs()
        except Exception, ex:
            self.ui.show_error('Error while retrieving messages from server.\n'
                               'Description: %s' % str(ex), self.ui.window)
            return
            
        treeview = self.ui.treeview
        liststore = treeview.get_model()
        liststore.clear()
        
        for num, msg in enumerate(server.messages.values()):
            msg_info = [msg.id, num, msg.Date, msg.From, msg.Subject, msg.Body, len(msg.Attachments)]
            liststore.append(msg_info)
            
        treeview.set_model(liststore)
