#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")

from exploitutils import *

import canvasengine
import time

from ExploitTypes.localcommand import LocalCommand

NAME                     = "whoami"
DESCRIPTION              = "Gets ID result on each selected node"
VERSION                  = "1.0"
DOCUMENTATION            = {}
DOCUMENTATION["Warning"] = "Use on a UnixNode may trigger snort!"
GTK2_DIALOG              = "dialog.glade2"
PROPERTY                 = {}
PROPERTY['TYPE']         = "Commands"
PROPERTY['SITE']         = "Local"
PROPERTY['ARCH']         = [ ["Linux"], ["Windows"] ]
PROPERTY['VERSION']      = [ "All" ]

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)" % NAME)

        for node in self.argsDict["passednodes"]:
            type = node.nodetype
            nodename = node.getname()

            if type == "UnixShellNode":
                self.log("[ii] This may trigger snort")
                self.result = node.runcommand("id -a")

            elif "posix" in node.capabilities or type == "ScriptNode":
                uid, euid, gid, egid = node.shell.ids() #0 for success in some cases...
                self.result = "UID=%d EUID=%d GID=%d EGID=%d" % (uid, euid, gid, egid)
                self.log("[ii] whoami: %s" % self.result)

            elif "win32api" in node.capabilities:
                self.result = node.shell.whoami()

                cname = self.exploitnodes("computername", nodes=[node])[0]
                # nodename is a string of type 'parentID->nodeID' so we parse
                # out the nodeID and use that as an index ??? XXX: check me
                self.log("[ii] whoami: %s" % self.result)
                try:
                    #self.log("cname=%s"%cname)
                    #self.log("node.getname()=%s"%node.getname())
                    #self.log("cname[node.getname()]=%s"%cname[node.getname()])
                    result = self.result.split("\\")[-1]
                    if str(cname[node.getname()]) + "$" in result:
                        self.log("[ii] LOCAL\\SYSTEM account")
                except Exception: # XXX: no longer as painfully the immunity way ;P
                    pass

            else:
                self.log("[EE] Node of type %s not supported yet" % type)

            if self.result:
                self.target.add_knowledge('UserID', self.result, 100)

        self.setInfo("%s - done (success)" % NAME)

        return 1
