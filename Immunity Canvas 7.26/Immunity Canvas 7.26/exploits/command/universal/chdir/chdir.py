#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys

if '.' not in sys.path:
    sys.path.append('.')

import os
from exploitutils import *
from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME                    = "chdir"
DESCRIPTION             = "Changes directory. Uses first selected node."
DOCUMENTATION           = {}
VERSION                 = "1.0"

PROPERTY                = {}
PROPERTY['TYPE']        = "Commands"
PROPERTY['SITE']        = "Local"
PROPERTY['ARCH']        = [ ["Unix"], ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.resulti            = ""
        self.name               = NAME
        self.supportedNodeArgs  = ["JavaNode", "LocalNode","UnixShellNode","win32Node","linuxNode", "osxNode","VFSNode","ScriptNode", "solarisNode","win64Node","PowerShellNode"]
        self.directory          = "."
        return

    def getargs(self):
        self.directory = self.argsDict.get("directory", self.directory)

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))
        self.getargs()

        self.log("Changing directory to %s" % self.directory)

        for node in self.argsDict["passednodes"]:

            type        = node.nodetype
            nodename    = node.getname()

            if type not in self.supportedNodeArgs:
                self.log("%s node type not supported" % type)
                continue

            if type == "UnixShellNode":
                self.result = node.runcommand("cd %s" % self.directory)
            elif type in self.supportedNodeArgs:
                self.result = node.shell.chdir(self.directory) #0 for success in some cases...
                if self.result == 0:
                    self.log("Node %s changed dir to %s" % (nodename, self.directory))
                else:
                    self.log("Node %s could not change directory to %s" % (nodename, self.directory))
            else:
                self.result = os.chdir(self.directory)

        self.dispshellcmd = "cd %s" % self.directory
        self.log("chdir finished, result=%s" % self.result)
        self.setInfo("%s - done (success)" % (NAME))
        return 1
