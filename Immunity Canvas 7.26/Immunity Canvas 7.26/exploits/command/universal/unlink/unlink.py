#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

import os,getopt
import socket
from exploitutils import *

from ExploitTypes.localcommand import LocalCommand
import canvasengine
import time

NAME = "CANVAS Unlink"
DESCRIPTION = "CANVAS Unlink"
DOCUMENTATION = {}
VERSION = "1.0"
PROPERTY = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Unix", "All"], ["Windows", "All"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name = NAME
        self.filename = "/doesnotexist"

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))
        self.filename = self.argsDict.get("filename", self.filename)

        for node in self.argsDict["passednodes"]:
            if node.nodetype == "UnixShellNode":
                self.result = node.runcommand("rm %" % self.filename)

            elif node.nodetype in ["win32Node", "linuxNode", "bsdNode", "win64Node", "PowerShellNode"]:
                self.result = node.unlink(self.filename)
                self.log("Unlink result: %s" % self.result)

            elif node.nodetype == "localNode":
                self.result = os.unlink(self.filename)

            else:
                self.log("%s node type not supported" % node.nodetype)

        self.setInfo("%s - done (success: %s)" % (NAME, self.result))
        return 1

if __name__ == '__main__':
    print "Cannot be called from the commandline"
