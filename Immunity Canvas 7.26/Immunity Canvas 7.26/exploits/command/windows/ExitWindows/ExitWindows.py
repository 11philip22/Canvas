#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2008
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path:
    sys.path.append(".")

import os,getopt
import socket
from exploitutils import *
import canvasengine
import time

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME                = "ExitWindows"
DESCRIPTION         = "Exits Windows - this will return, and then windows will shut down"
DOCUMENTATION       = {}
VERSION             = "1.0"

PROPERTY            = {}
PROPERTY['TYPE']    = "Commands"
PROPERTY['SITE']    = "Local"
PROPERTY['ARCH']    = [ ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)" % (NAME))

        node = self.argsDict["passednodes"][0]

        self.result = []
        for node in self.argsDict["passednodes"]:
            nodetype = node.nodetype
            capabilities = node.capabilities
            if "win32api" in capabilities:
                self.log("Getting shutdown priviledge")
                self.exploitnodes("getpriv", args={"privname": "SeShutdownPrivilege"})
                self.log("Exiting Windows")
                ret = node.shell.ExitWindows()
                self.log("ExitWindows Returned %d on node %s"%(ret, node.getname()))
            else:
                self.log("The node named %s of type %s does not have the capabilities needed to run this command" % (node.get_name(),nodetype))
                self.result += [0]
                
        if 1 in self.result:
            ret = 1
        else:
            ret = 0

        self.dispshellcmd = self.command

        self.setInfo("%s - done"%(NAME))
        return ret

