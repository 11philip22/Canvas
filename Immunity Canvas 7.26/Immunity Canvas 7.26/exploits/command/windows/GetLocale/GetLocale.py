#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2005
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")

import os,getopt
import socket
import time

from exploitutils import *

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

import canvasengine
from shelllistener import *


NAME             = "GetLocale"
DESCRIPTION      = "Gets the language of the node"
DOCUMENTATION    = {}
VERSION          = "1.0"


PROPERTY         = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Windows"] ]
NOTES            = """
"""

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.name = NAME

    def run(self):
        """
        This run happens on the first node selected
        """
        self.setInfo("%s (in progress)"%(NAME))
        node=self.argsDict["passednodes"][0]
        nodename=node.getname()
        caps = node.capabilities
        if "win32api" not in caps:
            self.log("Node %s not a Win32 node..."%nodename)
            self.setInfo("%s: %s not a Win32 Node!"%(self.name, nodename))
            return 0
        #we are a win32 node
        locale=node.shell.getlocale() #returns a tuple (langname, countryname, codepage)

        readable="%s_%s, codepage: %s"%locale
        self.result=locale
        if locale:
            self.log("Locale=%s"%readable)
            self.setInfo("%s: %s locale: %s!"%(self.name, nodename, readable))
        else:
            self.log("Could not get locale.")
            self.setInfo("%s: Could not get locale for: %s!"%(self.name, nodename))
            return 0
        return 1

if __name__=="__main__":
    print "This win32 local module is meant to be run only within CANVAS"

