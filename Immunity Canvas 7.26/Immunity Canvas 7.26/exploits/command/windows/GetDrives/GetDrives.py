#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path:
    sys.path.append(".")

import os,getopt
import socket
from exploitutils import *
import canvasengine
import time

from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand

NAME             = "GetDrives"
DESCRIPTION      = "Gets the drives attached to a Windows Node"
DOCUMENTATION    = {}
VERSION          = "1.0"

PROPERTY         = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result=""
        self.name=NAME

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        node=self.argsDict["passednodes"][0]

        self.result=[]
        node = self.argsDict["passednodes"][0]
        nodetype=node.nodetype
        capabilities=node.capabilities
        if "win32api" in capabilities:
            from win32MosdefShellServer import DRIVE_TYPES
            ret=node.shell.GetDrives()
            self.log("Drives: %s"%ret)
            self.result=ret
        else:
            self.log("The node named %s of type %s does not have the capabilities needed to run this command"%(node.get_name(),nodetype))
            self.result=0

        self.setInfo("%s - done (%s)"%(NAME, self.result))
        return 1

