#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *

from ExploitTypes.localcommand import LocalCommand
import canvasengine
import time

NAME             = "SetThreadToken"
DESCRIPTION      = "Sets the thread token (0 for reverttoself)"
DOCUMENTATION    = {}
VERSION          = "1.0"
GTK2_DIALOG      = "dialog.glade2"
PROPERTY         = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Windows"] ]


class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.token  = 0

    def getargs(self):
        self.token=dInt(self.argsDict.get("token", self.token))

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        self.getargs()
        self.log("Using token: %s"%self.token)

        for node in self.argsDict["passednodes"]:
            if "win32api" not in node.capabilities:
                #skip nodes we don't support...
                self.log("%s node type not supported"%node.getname())
                continue
            self.log("Setting token to 0x%x"%self.token)
            self.result=node.shell.SetThreadToken(self.token)
        if self.result:
            retstr="success"
        else:
            self.log("Failed to set token to %x"%self.token)
            retstr="failure"
        self.setInfo("%s - done (%s)"%(NAME,retstr))
        return 1


if __name__ == '__main__':
    print "Cannot be called from the commandline"


