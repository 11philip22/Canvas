#! /usr/bin/env python

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

import sys
#covers both angles
sys.path.append(".")
sys.path.append("../../")


from exploitutils import *
from ExploitTypes.localcommand import LocalCommand

NAME="Add Hosts from File"
DESCRIPTION="Adds a list of hosts from a file to the host knowledge tree"
DOCUMENTATION={}
VERSION="1.0"

PROPERTY = {}
PROPERTY['TYPE'] = "Tools"

class theexploit(LocalCommand):
    def __init__(self):
        LocalCommand.__init__(self)
        self.result = ""
        self.name   = NAME

    def run(self):
        self.setInfo("%s (in progress)"%(NAME))
        filename=self.argsDict["filename"]
        node=self.argsDict["passednodes"][0]
        
        
        app=self.engine.getModuleExploit("gethostbyname")
        app.link(self)
        
        ips=file(filename).readlines()
        gi = self.getGeoIPlist()
        for i in ips:
            i=i.strip()
            
            ##Stop 0.0.0.0 being added as that's just plain stupid
            if i == "0.0.0.0":
                self.log("0.0.0.0 is not a valid target address, changing to 127.0.0.1")
                i = "127.0.0.1"
                
            self.log("Attempting to add: %s"%i)
            app.argsDict["host"]=i
            app.run() #call gethostbyname()
            ip=app.result
    
            if ip in node.get_all_known_hosts():
                self.log("Host %s already known"%ip)
                continue
    
            if gi!=None:
                country = gi.country_code_by_addr(ip)
                self.log("Country code of %s: %s"%(ip,country))
            else:
                country = None
            if self.engine and country in self.engine.country_exclude_list:
                self.log("Host %s's country code is %s which is in the exclude list. Not adding.")
                continue
            
            newhost=node.new_host(ip)
    
            self.result=ip
            self.log("host added: %s"%self.result)
        self.setInfo("%s - done (success: %s)"%(NAME,self.result.strip()))
        return 1


def usage():
    app=theexploit()
    print "Usage: "+sys.argv[0]+" [-T (for test)] -t target [-p port:"+str(app.port)+"] [-v version:1] -l localip -d localport "

    app.displayVersions()


if __name__ == '__main__':
    import getopt
    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)
    
    try:
        (opts,args)=getopt.getopt(sys.argv[1:],"v:t:s:l:d:p:T")
    except getopt.GetoptError:
        usage()

    app = theexploit()
    target=""
    localhost=""
    localport=""
    version=0
    port=0
    test=0
    for o,a in opts:
        if o in ["-t"]:
            target=a
        if o in ["-v"]:
            app.setVersion(int(a))
        if o in ["-l"]:
            localhost=a
        if o in ["-d"]:
            localport=a
        if o in ["-T"]:
            test=1
        if o in ["-p"]:
            app.setPort(int(a))

    if (not test and (target == "" )):
        print "ERROR: Target: %s Localhost: %s Localport: %s"%(target,localhost,localport)
        usage()

    from hostKnowledge import *
    from listenerLine import *
    from localNode import *
    app.target=hostKnowledge(target,None)
    app.argsDict["version"]=version
    app.argsDict["port"]=port
    app.argsDict["host"]=target
    import canvasengine
    app.engine=canvasengine.canvasengine(None)
    app.callback=fakeListenerLine(localhost,localport)
    app.argsDict["passednodes"]=[localNode()]

    if test:
        if target=="":
            usage()
        if app.test():
            print "Found!"
        sys.exit(1)
        
    app.run()
    #string = app.makesploit()
    #print string
    print "Done."
    import time
    print "Sleeping...hit C-c"
    time.sleep(10000)
    

