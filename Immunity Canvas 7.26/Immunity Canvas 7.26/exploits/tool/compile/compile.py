#! /usr/bin/env python

"""
Compile: compile source of MOSDEF C into a .exe
"""

#Proprietary CANVAS source code - use only under the license agreement
#specified in LICENSE.txt in your CANVAS distribution
#Copyright Immunity, Inc, 2002-2006
#http://www.immunityinc.com/CANVAS/ for more information

VERSION                      = "1.0"

CHANGES                      = """
1.0 released.
"""

NOTES                        = """
Compile: compile source of MOSDEF C into a .exe
"""
DOCUMENTATION                = {}
DOCUMENTATION["Date public"] = "08/2005"
DOCUMENTATION["Notes"]       = NOTES

NAME                         = "Compile"
DESCRIPTION                  = "Ask for a file in MOSDEF C and create a tiny .exe"
VERSION                      = "1.0"
PROPERTY                     = {}
PROPERTY['TYPE']             = "Tools"

import sys
sys.path.append(".")
sys.path.append("../../")

from exploitutils import *
from ExploitTypes.utility import Utility

class theexploit(Utility):
    def __init__(self):
        Utility.__init__(self)
        self.name=NAME
        self.setPort(0)
        self.setHost("")
        self.setVersion(1)
        self.badstring=""
        self.args   = ""
        self.source = ""
        self.dest   = "out.exe"

    def setHost(self, target):
        self.host=target
                                
    def createShellcode(self, d="", b=""):
        return ""

    def test(self):
        return 0

    def neededListenerTypes(self):
        return []

    def run(self):
        self.source = self.argsDict.get("source",self.source)
        self.dest   = self.argsDict.get("destination",self.dest)
        self.args   = self.argsDict.get("arguments",self.args)

        # arguments came in this way: cmd=dir /c|directory=c:\winnt\
        # the value of the argument can only be string by now :( [i need to change that]
        arguments = {}
        self.setInfo("Writting file: %s (in progress)" % self.dest, showlog=1)
        
        import string 
        sp = self.args.split("|")
        for a in sp:
            if not a:
                continue

            var = a.split("=")
            if len(var) == 2:
                arguments[string.strip(var[0])] = var[1]

        from MOSDEF.pelib import PElib
        p = PElib()
        try:
            code = open(self.source,"rb").read()
        except Exception:
            self.log("No file %s found to read...bailing out"%self.source)
            return 0
        
        if string.lower(self.dest[-4:]) != ".exe":
                        self.dest += ".exe"
        print dir(p)
        size = p.createMOSDEFPE(self.dest, code, arguments)
        self.setInfo("Writting file: %s (success)" % self.dest, showlog=1)

        self.log("File %s written, size %d bytes" % (self.dest, size) )
    
        return 1
        

    def usage(self):
        print "Usage:\n %s -f sourcefile.c -d destfile.exe -a args" % sys.argv[0]
        print " args example: cmd=dir /c|directory=c:\winnt\ "
        sys.exit(0)
    

if __name__ == '__main__':
    import getopt
    app = theexploit()
    args= sys.argv[1:]

    print "Running CANVAS %s Exploit v %s"%(DESCRIPTION,VERSION)

    try:
            opts, args = getopt.getopt(args, "f:d:a:")
    except EOFError:
            print "Error in Arguments"
            app.usage()

    for o,a in opts:
        if o == '-f':
            app.source = a
        if o == '-d':
            app.dest   = a
        if o == '-a':
            app.args   = a

    if app.dest and app.source and app.args:
        app.run()
    else:
        app.usage()
            
